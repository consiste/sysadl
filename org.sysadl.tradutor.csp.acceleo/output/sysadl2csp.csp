subset(s1, s2) = (inter(s1,s2)==s1)
IS_TRUE(h) = if (h) then SKIP else DIV

			
																
			
																
			
																
			
																
			
																
datatype Command = On|Off 					
			
																
Commands = { (heater,cooler) | heater<- Command ,cooler<- Command  }
Commands_heater((heater,cooler)) = heater
Commands_cooler((heater,cooler)) = cooler
			
																
			
																
CelsiusTemperature
			
																
FahrenheitTemperature
			
																
			
																
			
																
			
																
			
																
			
																
			
																
			
																
			
																
			
																
			
																
			
																
			
																
			
																
			
																
			
channel s1_current1_FTemperatureOPT : FahrenheitTemperature
channel s2_current2_FTemperatureOPT : FahrenheitTemperature
channel s3_detectedS_PresenceOPT : Bool
channel ui_desired_CTemperatureOPT : CelsiusTemperature
channel a2_controllerC_CommandIPT : Command
channel a1_controllerH_CommandIPT : Command
channel rtc_detected_PresenceIPT : Bool
channel rtc_localtemp1_CTemperatureIPT : CelsiusTemperature
channel rtc_localTemp2_CTemperatureIPT : CelsiusTemperature
channel rtc_userTemp_CTemperatureIPT : CelsiusTemperature
channel rtc_heating_CommandOPT : Command
channel rtc_cooling_CommandOPT : Command

RTCSystemCFD =  (RTCSystemCFD_COMPONENTS [| RTCSystemCFD_internal |] RTCSystemCFD_CONNECTORS) \RTCSystemCFD_internal

RTCSystemCFD_internal = {|rtc_detected_PresenceIPT,
						rtc_localtemp1_CTemperatureIPT,
						rtc_localTemp2_CTemperatureIPT,
						rtc_userTemp_CTemperatureIPT,
						rtc_heating_CommandOPT,
						rtc_cooling_CommandOPT |}

assert RTCSystemCFD:[deadlock free]
assert RTCSystemCFD:[livelock free]

RTCSystemCFD_COMPONENTS = 
	s1_TemperatureSensorCP
	|||s2_TemperatureSensorCP
	|||s3_PresenceSensorCP
	|||ui_UserInterfaceCP
	|||a2_CoolerCP
	|||a1_HeaterCP
	|||rtc_RoomTemperatureControllerCP

RTCSystemCFD_CONNECTORS = 
	c1_FahrenheitToCelsiusCN
	|||uc_CTemperatureCN
	|||cc2_CommandCN
	|||pc_PresenceCN
	|||c2_FahrenheitToCelsiusCN
	|||cc1_CommandCN
													
						
s1_TemperatureSensorCP = 
	|~| current1:FahrenheitTemperature @ s1_current1_FTemperatureOPT!current1 ->
s1_TemperatureSensorCP

s2_TemperatureSensorCP = 
	|~| current2:FahrenheitTemperature @ s2_current2_FTemperatureOPT!current2 ->
s2_TemperatureSensorCP

s3_PresenceSensorCP = 
	|~| detecteds:Bool @ s3_detectedS_PresenceOPT!detecteds ->
s3_PresenceSensorCP

ui_UserInterfaceCP = 
	|~| desired:CelsiusTemperature @ ui_desired_CTemperatureOPT!desired ->
ui_UserInterfaceCP

a2_CoolerCP = 
	a2_controllerC_CommandIPT?controllerc ->
a2_CoolerCP

a1_HeaterCP = 
	a1_controllerH_CommandIPT?controllerh ->
a1_HeaterCP

rtc_RoomTemperatureControllerCP = 								
	rtc_RoomTemperatureControllerCP_Config

rtc_RoomTemperatureControllerCP_Config = (rtc_COMPONENTS [| rtc_internal |] rtc_CONNECTORS) \rtc_internal

rtc_internal = {| sm_s1_CTemperatureIPT,
						sm_s2_CTemperatureIPT,
						sm_average_CTemperatureOPT,
						cm_target2_CTemperatureIPT,
						cm_average2_CTemperatureIPT,
						cm_heating_CommandOPT,
						cm_cooling_CommandOPT,
						pc_detected_PresenceIPT,
						pc_userTemp_CTemperatureIPT,
						pc_target_CTemperatureOPT |}


rtc_COMPONENTS = 
	sm_SensorsMonitorCP
	|||cm_CommanderCP
	|||pc_PresenceCheckerCP

rtc_CONNECTORS = 
	target_CTemperatureCN
	|||average_CTemperatureCN
rtc_DELEGATIONS = 
	userTemp_To_userTemp	
	|||detected_To_detected	
	|||s1_To_localtemp1	
	|||s2_To_localTemp2	
	|||heating_To_heating	
	|||cooling_To_cooling	
									

c1_FahrenheitToCelsiusCN =
	c1_FahrenheitToCelsiusAC

c1_FahrenheitToCelsiusAC = 
	(c1_PINS_FahrenheitToCelsiusAC 
		[| c1_FahrenheitToCelsiusAC_internal |]
	c1_ACTIONS_FahrenheitToCelsiusAC) \c1_FahrenheitToCelsiusAC_internal 

c1_FahrenheitToCelsiusAC_internal = {| |}

channel c1_loalTemp1_CelsiusTemperature : CelsiusTemperature
channel c1_current1_FahrenheitTemperature : FahrenheitTemperature

c1_ACTIONS_FahrenheitToCelsiusAC =
[| c1_FahrenheitToCelsiusAC_internal |] i : {1 .. 1} @ c1_FahrenheitToCelsiusAC_ACTIONS(i)

c1_FahrenheitToCelsiusAC_ACTIONS(1)= c1_FtC_FahrenheitToCelsiusAN


c1_FtC_FahrenheitToCelsiusAN = 
	c1_current1_FahrenheitTemperature?current1-> 
	|~|loalTemp1: {x | x <- CelsiusTemperature,FahrenheitToCelsiusEQ(x, current1) } @ 
		c1_loalTemp1_CelsiusTemperature!loalTemp1 ->
	c1_FtC_FahrenheitToCelsiusAN

c1_PINS_FahrenheitToCelsiusAC = 
	[| c1_FahrenheitToCelsiusAC_internal |] i : {1 .. 2} @ c1_FahrenheitToCelsiusAC_PIN(i)

c1_FahrenheitToCelsiusAC_PIN(1) = c1_loalTemp1_FahrenheitToCelsiusAC
c1_FahrenheitToCelsiusAC_PIN(2) = c1_current1_FahrenheitToCelsiusAC


c1_current1_FahrenheitToCelsiusAC =
	
	c1_current1_FahrenheitTemperature!fahrenheittemperature ->
	c1_current1_FahrenheitToCelsiusAC

c1_loalTemp1_FahrenheitToCelsiusAC = 
	c1_loalTemp1_CelsiusTemperature?celsiustemperature ->
	
	c1_loalTemp1_FahrenheitToCelsiusAC

	
uc_CTemperatureCN =
	ui_desired_CTemperatureOPT?celsiustemperature->								
	rtc_userTemp_CTemperatureIPT!celsiustemperature->								
uc_CTemperatureCN

cc2_CommandCN =
	rtc_cooling_CommandOPT?command->								
	a2_controllerC_CommandIPT!command->								
cc2_CommandCN

pc_PresenceCN =
	s3_detectedS_PresenceOPT?boolean->								
	rtc_detected_PresenceIPT!boolean->								
pc_PresenceCN

c2_FahrenheitToCelsiusCN =
	c2_FahrenheitToCelsiusAC

c2_FahrenheitToCelsiusAC = 
	(c2_PINS_FahrenheitToCelsiusAC 
		[| c2_FahrenheitToCelsiusAC_internal |]
	c2_ACTIONS_FahrenheitToCelsiusAC) \c2_FahrenheitToCelsiusAC_internal 

c2_FahrenheitToCelsiusAC_internal = {| |}

channel c2_loalTemp1_CelsiusTemperature : CelsiusTemperature
channel c2_current1_FahrenheitTemperature : FahrenheitTemperature

c2_ACTIONS_FahrenheitToCelsiusAC =
[| c2_FahrenheitToCelsiusAC_internal |] i : {1 .. 1} @ c2_FahrenheitToCelsiusAC_ACTIONS(i)

c2_FahrenheitToCelsiusAC_ACTIONS(1)= c2_FtC_FahrenheitToCelsiusAN


c2_FtC_FahrenheitToCelsiusAN = 
	c2_current1_FahrenheitTemperature?current1-> 
	|~|loalTemp1: {x | x <- CelsiusTemperature,FahrenheitToCelsiusEQ(x, current1) } @ 
		c2_loalTemp1_CelsiusTemperature!loalTemp1 ->
	c2_FtC_FahrenheitToCelsiusAN

c2_PINS_FahrenheitToCelsiusAC = 
	[| c2_FahrenheitToCelsiusAC_internal |] i : {1 .. 2} @ c2_FahrenheitToCelsiusAC_PIN(i)

c2_FahrenheitToCelsiusAC_PIN(1) = c2_loalTemp1_FahrenheitToCelsiusAC
c2_FahrenheitToCelsiusAC_PIN(2) = c2_current1_FahrenheitToCelsiusAC


c2_current1_FahrenheitToCelsiusAC =
	
	c2_current1_FahrenheitTemperature!fahrenheittemperature ->
	c2_current1_FahrenheitToCelsiusAC

c2_loalTemp1_FahrenheitToCelsiusAC = 
	c2_loalTemp1_CelsiusTemperature?celsiustemperature ->
	
	c2_loalTemp1_FahrenheitToCelsiusAC

	
cc1_CommandCN =
	rtc_heating_CommandOPT?command->								
	a1_controllerH_CommandIPT!command->								
cc1_CommandCN

																
			
channel sm_s1_CTemperatureIPT : CelsiusTemperature
channel sm_s2_CTemperatureIPT : CelsiusTemperature
channel sm_average_CTemperatureOPT : CelsiusTemperature
channel cm_target2_CTemperatureIPT : CelsiusTemperature
channel cm_average2_CTemperatureIPT : CelsiusTemperature
channel cm_heating_CommandOPT : Command
channel cm_cooling_CommandOPT : Command
channel pc_detected_PresenceIPT : Bool
channel pc_userTemp_CTemperatureIPT : CelsiusTemperature
channel pc_target_CTemperatureOPT : CelsiusTemperature

						
sm_SensorsMonitorCP =								
	sm_CalculateAverageTemperatureAC

sm_CalculateAverageTemperatureAC = 
	(sm_PINS_CalculateAverageTemperatureAC 
		[| sm_CalculateAverageTemperatureAC_internal |]
	sm_ACTIONS_CalculateAverageTemperatureAC) \sm_CalculateAverageTemperatureAC_internal 

sm_CalculateAverageTemperatureAC_internal = {| |}

channel sm_s1_CelsiusTemperature : CelsiusTemperature
channel sm_s2_CelsiusTemperature : CelsiusTemperature
channel sm_average_CelsiusTemperature : CelsiusTemperature


sm_ACTIONS_CalculateAverageTemperatureAC =
[| sm_CalculateAverageTemperatureAC_internal |] i : {1 .. 1} @ sm_CalculateAverageTemperatureAC_ACTIONS(i)

sm_CalculateAverageTemperatureAC_ACTIONS(1)= sm_CalcAvTemp_CalculateAverageTemperatureAN


sm_CalcAvTemp_CalculateAverageTemperatureAN = 
	sm_s1_CelsiusTemperature?s1-> 
	sm_s2_CelsiusTemperature?s2-> 
	|~|average: {x | x <- CelsiusTemperature,CalculateAverageTemperatureEQ(x, s1,s2) } @ 
		sm_average_CelsiusTemperature!average ->
	sm_CalcAvTemp_CalculateAverageTemperatureAN

sm_PINS_CalculateAverageTemperatureAC = 
	[| sm_CalculateAverageTemperatureAC_internal |] i : {1 .. 3} @ sm_CalculateAverageTemperatureAC_PIN(i)

sm_CalculateAverageTemperatureAC_PIN(1) = sm_s1_CalculateAverageTemperatureAC
sm_CalculateAverageTemperatureAC_PIN(2) = sm_s2_CalculateAverageTemperatureAC
sm_CalculateAverageTemperatureAC_PIN(3) = sm_average_CalculateAverageTemperatureAC


sm_s1_CalculateAverageTemperatureAC =
	sm_s1_CTemperatureIPT?s1-> 

	sm_s1_CelsiusTemperature!s1 ->
	sm_s1_CalculateAverageTemperatureAC

sm_s2_CalculateAverageTemperatureAC =
	sm_s2_CTemperatureIPT?s2-> 

	sm_s2_CelsiusTemperature!s2 ->
	sm_s2_CalculateAverageTemperatureAC

sm_average_CalculateAverageTemperatureAC = 
	sm_average_CelsiusTemperature?average ->
	sm_average_CTemperatureOPT!average-> 

	sm_average_CalculateAverageTemperatureAC

			
cm_CommanderCP =								
	cm_DecideCommandAC

cm_DecideCommandAC = 
	(cm_PINS_DecideCommandAC 
		[| cm_DecideCommandAC_internal |]
	cm_ACTIONS_DecideCommandAC) \cm_DecideCommandAC_internal 

cm_DecideCommandAC_internal = {| |}

channel cm_average2_CelsiusTemperature : CelsiusTemperature
channel cm_target2_CelsiusTemperature : CelsiusTemperature
channel cm_heating_Command : Command
channel cm_cooling_Command : Command
channel cm_cmdsH_Commands : Commands		
channel cm_cmdsC_Commands : Commands		


cm_ACTIONS_DecideCommandAC =
[| cm_DecideCommandAC_internal |] i : {1 .. 3} @ cm_DecideCommandAC_ACTIONS(i)

cm_DecideCommandAC_ACTIONS(1)= cm_ct_CompareTemperatureAN
cm_DecideCommandAC_ACTIONS(2)= cm_cmdH_CommandHeaterAN
cm_DecideCommandAC_ACTIONS(3)= cm_cmdC_CommandCoolerAN


cm_ct_CompareTemperatureAN = 
	cm_average2_CelsiusTemperature?average2-> 
	cm_target2_CelsiusTemperature?target2-> 
	|~|out: {x | x <- Commands,CompareTemperatureEQ(x, average2,target2) } @ 
		cm_cmdsH_Commands!out ->
		cm_cmdsC_Commands!out ->
		
	cm_ct_CompareTemperatureAN

cm_cmdH_CommandHeaterAN = 
	cm_cmdsH_Commands?cmdsH-> 
	|~|heating: {x | x <- Command,CommandHeaterEQ(x, cmdsH) } @ 
		cm_heating_Command!heating ->
	cm_cmdH_CommandHeaterAN

cm_cmdC_CommandCoolerAN = 
	cm_cmdsC_Commands?cmdsC-> 
	|~|cooling: {x | x <- Command,CommandCoolerEQ(x, cmdsC) } @ 
		cm_cooling_Command!cooling ->
	cm_cmdC_CommandCoolerAN

cm_PINS_DecideCommandAC = 
	[| cm_DecideCommandAC_internal |] i : {1 .. 4} @ cm_DecideCommandAC_PIN(i)

cm_DecideCommandAC_PIN(1) = cm_average2_DecideCommandAC
cm_DecideCommandAC_PIN(2) = cm_target2_DecideCommandAC
cm_DecideCommandAC_PIN(3) = cm_heating_DecideCommandAC
cm_DecideCommandAC_PIN(4) = cm_cooling_DecideCommandAC


cm_average2_DecideCommandAC =
	cm_average2_CTemperatureIPT?average2-> 

	cm_average2_CelsiusTemperature!average2 ->
	cm_average2_DecideCommandAC

cm_target2_DecideCommandAC =
	cm_target2_CTemperatureIPT?target2-> 

	cm_target2_CelsiusTemperature!target2 ->
	cm_target2_DecideCommandAC

cm_cooling_DecideCommandAC = 
	cm_cooling_Command?cooling ->
	cm_cooling_CommandOPT!cooling-> 

	cm_cooling_DecideCommandAC
cm_heating_DecideCommandAC = 
	cm_heating_Command?heating ->
	cm_heating_CommandOPT!heating-> 

	cm_heating_DecideCommandAC

			
pc_PresenceCheckerCP =								
	pc_CheckPresenceToSetTemperatureAC

pc_CheckPresenceToSetTemperatureAC = 
	(pc_PINS_CheckPresenceToSetTemperatureAC 
		[| pc_CheckPresenceToSetTemperatureAC_internal |]
	pc_ACTIONS_CheckPresenceToSetTemperatureAC) \pc_CheckPresenceToSetTemperatureAC_internal 

pc_CheckPresenceToSetTemperatureAC_internal = {| |}

channel pc_detected_Boolean : Bool
channel pc_userTemp_CelsiusTemperature : CelsiusTemperature
channel pc_target_CelsiusTemperature : CelsiusTemperature


pc_ACTIONS_CheckPresenceToSetTemperatureAC =
[| pc_CheckPresenceToSetTemperatureAC_internal |] i : {1 .. 1} @ pc_CheckPresenceToSetTemperatureAC_ACTIONS(i)

pc_CheckPresenceToSetTemperatureAC_ACTIONS(1)= pc_CheckPeresenceToSetTemperatureAN_CheckPeresenceToSetTemperatureAN


pc_CheckPeresenceToSetTemperatureAN_CheckPeresenceToSetTemperatureAN = 
	pc_detected_Boolean?detected-> 
	pc_userTemp_CelsiusTemperature?userTemp-> 
	|~|target: {x | x <- CelsiusTemperature,CheckPresenceToSetTemperatureEQ(x, detected,userTemp) } @ 
		pc_target_CelsiusTemperature!target ->
	pc_CheckPeresenceToSetTemperatureAN_CheckPeresenceToSetTemperatureAN

pc_PINS_CheckPresenceToSetTemperatureAC = 
	[| pc_CheckPresenceToSetTemperatureAC_internal |] i : {1 .. 3} @ pc_CheckPresenceToSetTemperatureAC_PIN(i)

pc_CheckPresenceToSetTemperatureAC_PIN(1) = pc_detected_CheckPresenceToSetTemperatureAC
pc_CheckPresenceToSetTemperatureAC_PIN(2) = pc_userTemp_CheckPresenceToSetTemperatureAC
pc_CheckPresenceToSetTemperatureAC_PIN(3) = pc_target_CheckPresenceToSetTemperatureAC


pc_detected_CheckPresenceToSetTemperatureAC =
	pc_detected_PresenceIPT?detected-> 

	pc_detected_Boolean!detected ->
	pc_detected_CheckPresenceToSetTemperatureAC

pc_userTemp_CheckPresenceToSetTemperatureAC =
	pc_userTemp_CTemperatureIPT?userTemp-> 

	pc_userTemp_CelsiusTemperature!userTemp ->
	pc_userTemp_CheckPresenceToSetTemperatureAC

pc_target_CheckPresenceToSetTemperatureAC = 
	pc_target_CelsiusTemperature?target ->
	pc_target_CTemperatureOPT!target-> 

	pc_target_CheckPresenceToSetTemperatureAC

			
target_CTemperatureCN =
	pc_target_CTemperatureOPT?celsiustemperature->								
	cm_target2_CTemperatureIPT!celsiustemperature->								
target_CTemperatureCN

average_CTemperatureCN =
	sm_average_CTemperatureOPT?celsiustemperature->								
	cm_average2_CTemperatureIPT!celsiustemperature->								
average_CTemperatureCN

																
			
																
			
																
			
																
			
																
			
																
			
																
			
																
			
																
			
CalculateAverageTemperatureEQ(x,t1,t2) = x== (t1 + t2)/2 
																
			
																
			
																
			
																
			
																
			
																
			
																
			
																
			
																
			
CompareTemperatureEQ(x,target,average) = if (average>target) then x==On and Off else x==Off and On 
																
			
FahrenheitToCelsiusEQ(x,f) = x== (5*(f - 32)/9) 
																
			
CommandHeaterEQ(x,cmds) = x==Commands_heater(cmds) 
																
			
CommandCoolerEQ(x,cmds) = x==Commands_cooler(cmds) 
																
			
																
			
																
			
CheckPresenceToSetTemperatureEQ(x,detected,userTemp) =  
																
userTemp_To_userTemp= rtc_userTemp_CTemperatureIPT?celsiustemperature ->
pc_userTemp_CTemperatureIPT!celsiustemperature ->
userTemp_To_userTemp

detected_To_detected= rtc_detected_PresenceIPT?boolean ->
pc_detected_PresenceIPT!boolean ->
detected_To_detected

s1_To_localtemp1= rtc_localtemp1_CTemperatureIPT?celsiustemperature ->
sm_s1_CTemperatureIPT!celsiustemperature ->
s1_To_localtemp1

s2_To_localTemp2= rtc_localTemp2_CTemperatureIPT?celsiustemperature ->
sm_s2_CTemperatureIPT!celsiustemperature ->
s2_To_localTemp2

heating_To_heating= cm_heating_CommandOPT?command ->
rtc_heating_CommandOPT!command ->
heating_To_heating

cooling_To_cooling= cm_cooling_CommandOPT?command ->
rtc_cooling_CommandOPT!command ->
cooling_To_cooling

		

