[comment encoding = UTF-8 /]
[module generate('http://org.sysadl')]

[template public generateModel(aModel : sysadl::Model)]
[comment @main/]
[file ('sysadl2csp.csp', false, 'UTF-8')]
DIAGRAM =  (COMPONENTS ['['/]| Events |] CONNECTORS)

COMPONENTS =[for (pck : Package | aModel.packages)]
 			[for (elem : ElementDef | pck.definitions)separator ('|||') ? (elem.oclIsTypeOf(ComponentDef) and elem.oclAsType(ComponentDef).composite <> null)]	
[elem.name/]									
		[/for]
	[/for]

CONNECTORS =[for (pck : Package | aModel.packages)]
 				[for (elem : ElementDef | pck.definitions)separator ('|||')? (elem.oclIsTypeOf(ComponentDef) and elem.oclAsType(ComponentDef).composite <> null)]	
					[for (conn : ConnectorUse | elem.oclAsType(ComponentDef).composite.connectors)separator ('|||')]
[conn.name/]_[conn.definition.name/]_[conn.bindings.source.name/]_To_[conn.bindings.destination.name/]
					[/for]										
				[/for]
			[/for]

assert DIAGRAM:['['/]deadlock free]
assert DIAGRAM:['['/]livelock free]

	[for (pck : sysadl::Package | aModel.packages)]		
	[comment Traduzindo Tipos /]		
		[for (elem : ElementDef | pck.definitions)]											
			[let aux : Enumeration = self]
datatype [aux.name/] = [for (literal : EnumLiteralValue | aux.literals)separator ('|')][literal.name/][/for] 					
			[/let]		
			[let datatype : DataTypeDef = self]
[datatype.name/] = { [for (attribute : TypeUse | datatype.attributes)separator('.')][attribute.name/][/for] | [for (attributeDef : TypeUse | datatype.attributes) separator (',')][attributeDef.name/]<- [if (attributeDef.definition.name.equalsIgnoreCase('String'))]Char[else][attributeDef.definition.name/][/if] [/for] }
			[/let]
			[let compDef : ComponentDef = self]
					[if (not compDef.isBoundary and compDef.composite <> null)]		
						[for (compUse : ComponentUse| compDef.composite.components)]
							[for (portUse : PortUse | compUse.ports)]
								[if (portUse.definition.oclIsKindOf(sysadl::SimplePortDef))]
channel [compUse.name/]_[portUse.name/]_[portUse.definition.name/] : [portUse.definition.oclAsType(sysadl::SimplePortDef).flowType.name/]
								[/if]
								[if (portUse.definition.oclIsKindOf(sysadl::CompositePortDef))]
								[for (compPort : PortUse | portUse.definition.oclAsType(sysadl::CompositePortDef).ports )]
									[if (compPort.definition.oclIsKindOf(sysadl::SimplePortDef))]
channel [compUse.name/]_[portUse.name/]_[compPort.name/]_[portUse.definition.name/] : [compPort.definition.oclAsType(sysadl::SimplePortDef).flowType.name/]
									[/if]
								[/for]
								[/if]
							[/for]
						[/for] 

			[comment traduzindo configuração /]
[compDef.name/] = [for (compUse : ComponentUse | compDef.composite.components)separator ('|||')][compUse.name/]_[compUse.definition.name/][/for]
						
			[comment traduzindo componentes /]						
						[for (compUse : ComponentUse | compDef.composite.components)]
							[if (compUse.definition.isBoundary)]
[compUse.name/]_[compUse.definition.name/] = 
								[for (port : PortUse | compUse.ports)separator ('->') after ('->')]								
									[if (port.definition.oclIsKindOf(sysadl::SimplePortDef))]
										[if (port.definition.oclAsType(sysadl::SimplePortDef).flowProperties.toString().contains('in'))]
[compUse.name/]_[port.name/]_[port.definition.name/]?[port.definition.oclAsType(sysadl::SimplePortDef).flowType.name.toLowerCase()/]
										[else]
|~| [port.definition.oclAsType(sysadl::SimplePortDef).flowType.name.toLowerCase()/]:[port.definition.oclAsType(sysadl::SimplePortDef).flowType.name/] @ [compUse.name/]_[port.name/]_[port.definition.name/]![port.definition.oclAsType(sysadl::SimplePortDef).flowType.name.toLowerCase()/]
										[/if]
									[else]
										[for (compPort : PortUse | port.definition.oclAsType(sysadl::CompositePortDef).ports)separator ('->')]
											[if (compPort.definition.oclAsType(sysadl::SimplePortDef).flowProperties.toString().contains('in'))]
[compUse.name/]_[port.name/]_[compPort.name/]_[port.definition.name/]?[compPort.definition.oclAsType(sysadl::SimplePortDef).flowType.name.toLowerCase()/]
											[else]
|~|[compPort.definition.oclAsType(sysadl::SimplePortDef).flowType.name.toLowerCase()/]:[compPort.definition.oclAsType(sysadl::SimplePortDef).flowType.name/] @ [compUse.name/]_[port.name/]_[compPort.name/]_[port.definition.name/]![compPort.definition.oclAsType(sysadl::SimplePortDef).flowType.name.toLowerCase()/] 												
											[/if]
										[/for]
									[/if]
								[/for]
[compUse.name/]_[compUse.definition.name/]

							[else]
[compUse.name/]_[compUse.definition.name/] = 								
								[for (port : PortUse | compUse.ports)separator ('->')after ('->')]																
										[if (port.definition.oclIsKindOf(sysadl::SimplePortDef))]
											[if (port.definition.oclAsType(sysadl::SimplePortDef).flowProperties.toString().contains('in'))]
[compUse.name/]_[port.name/]_[port.definition.name/]?[port.definition.oclAsType(sysadl::SimplePortDef).flowType.name.toLowerCase()/]
											[elseif (port.definition.oclAsType(sysadl::SimplePortDef).flowProperties.toString().contains('out') )]
[compUse.name/]_[port.name/]_[port.definition.name/]![port.definition.oclAsType(sysadl::SimplePortDef).flowType.name.toLowerCase()/]										
											[/if]
										[else]
											[for (compPort : PortUse | port.definition.oclAsType(sysadl::CompositePortDef).ports)separator ('->')]
												[if (compPort.definition.oclAsType(sysadl::SimplePortDef).flowProperties.toString().contains('in'))]
[compUse.name/]_[port.name/]_[compPort.name/]_[port.definition.name/]?[compPort.definition.oclAsType(sysadl::SimplePortDef).flowType.name.toLowerCase()/]
												[else]
[compUse.name/]_[port.name/]_[compPort.name/]_[port.definition.name/]![compPort.definition.oclAsType(sysadl::SimplePortDef).flowType.name.toLowerCase()/] 												
												[/if]
											[/for]
										[/if]																																																													
								[/for]
[compUse.name/]_[compUse.definition.name/]
			
							[/if]							
						[/for]
					[comment  traduzindo conectores/]							
						[for (connector : ConnectorUse | compDef.composite.connectors)]							
							[for (bind : ConnectorBinding | connector.bindings)]
[connector.name/]_[connector.definition.name/]_[bind.source.name/]_To_[bind.destination.name/] =
								[for (compUse : ComponentUse | compDef.composite.components)]
									[for (portComp : PortUse | compUse.ports)]						
										[if (bind.source.definition.oclIsKindOf(sysadl::SimplePortDef) and bind.source.name.equalsIgnoreCase(portComp.name))]									
[compUse.name/]_[bind.source.name/]_[bind.source.definition.name/]?[bind.source.definition.oclAsType(sysadl::SimplePortDef).flowType.name.toLowerCase()/]->								
										[elseif(bind.source.definition.oclIsKindOf(sysadl::CompositePortDef) and bind.source.name.equalsIgnoreCase(portComp.name))]
											[for (compPort : PortUse | bind.source.definition.oclAsType(sysadl::CompositePortDef).ports)separator ('->')after ('->')]
												[if (compPort.definition.oclAsType(sysadl::SimplePortDef).flowProperties.toString().contains('in'))]
[compUse.name/]_[bind.source.name/]_[compPort.name/]_[bind.source.definition.name/]?[compPort.definition.oclAsType(sysadl::SimplePortDef).flowType.name.toLowerCase()/]
												[else]
[compUse.name/]_[bind.source.name/]_[compPort.name/]_[bind.source.definition.name/]![compPort.definition.oclAsType(sysadl::SimplePortDef).flowType.name.toLowerCase()/]																					
												[/if]										
											[/for]																						
[elseif (bind.destination.definition.oclIsKindOf(sysadl::SimplePortDef) and bind.destination.name.equalsIgnoreCase(portComp.name))]
[compUse.name/]_[bind.destination.name/]_[bind.destination.definition.name/]![bind.destination.definition.oclAsType(sysadl::SimplePortDef).flowType.name.toLowerCase()/]->
										[elseif(bind.destination.definition.oclIsKindOf(sysadl::CompositePortDef) and bind.destination.name.equalsIgnoreCase(portComp.name))]
											[for (compPort : PortUse | bind.destination.definition.oclAsType(sysadl::CompositePortDef).ports)separator ('->')after ('->')]
												[if (compPort.definition.oclAsType(sysadl::SimplePortDef).flowProperties.toString().contains('in'))]
[compUse.name/]_[bind.destination.name/]_[compPort.name/]_[bind.destination.definition.name/]?[compPort.definition.oclAsType(sysadl::SimplePortDef).flowType.name.toLowerCase()/]
												[else]
[compUse.name/]_[bind.destination.name/]_[compPort.name/]_[bind.destination.definition.name/]![compPort.definition.oclAsType(sysadl::SimplePortDef).flowType.name.toLowerCase()/]																					
												[/if]
											[/for]									
										[/if]
									[/for]
								[/for]
[connector.name/]_[connector.definition.name/]_[bind.source.name/]_To_[bind.destination.name/]
							[/for]					
														
						[/for]						
					[/if]
				[/let]
		[/for]						
	[/for]
[/file]
[/template]