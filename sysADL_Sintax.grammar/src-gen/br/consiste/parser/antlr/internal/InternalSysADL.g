/*
 * generated by Xtext 2.10.0
 */
grammar InternalSysADL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package br.consiste.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package br.consiste.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import br.consiste.services.SysADLGrammarAccess;

}

@parser::members {

 	private SysADLGrammarAccess grammarAccess;

    public InternalSysADLParser(TokenStream input, SysADLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected SysADLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getModelAccess().getModelAction_0(),
					$current);
			}
		)
		otherlv_1='Model'
		{
			newLeafNode(otherlv_1, grammarAccess.getModelAccess().getModelKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getModelAccess().getSemicolonKeyword_3());
		}
		(
			otherlv_4='using'
			{
				newLeafNode(otherlv_4, grammarAccess.getModelAccess().getUsingKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getModelRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getModelAccess().getInvolvedElementsElementDefCrossReference_4_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=';'
			{
				newLeafNode(otherlv_6, grammarAccess.getModelAccess().getSemicolonKeyword_4_2());
			}
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getPropertiesPropertyParserRuleCall_5_0_0());
					}
					lv_properties_7_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"properties",
							lv_properties_7_0,
							"br.consiste.SysADL.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getPackagesPackageParserRuleCall_5_1_0());
					}
					lv_packages_8_0=rulePackage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"packages",
							lv_packages_8_0,
							"br.consiste.SysADL.Package");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getRequirementsRequirementParserRuleCall_5_2_0());
					}
					lv_requirements_9_0=ruleRequirement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"requirements",
							lv_requirements_9_0,
							"br.consiste.SysADL.Requirement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getAllocationAllocationTableParserRuleCall_6_0());
				}
				lv_allocation_10_0=ruleAllocationTable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"allocation",
						lv_allocation_10_0,
						"br.consiste.SysADL.AllocationTable");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleElementDef
entryRuleElementDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementDefRule()); }
	iv_ruleElementDef=ruleElementDef
	{ $current=$iv_ruleElementDef.current; }
	EOF;

// Rule ElementDef
ruleElementDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementDefAccess().getDataTypeDefParserRuleCall_0());
		}
		this_DataTypeDef_0=ruleDataTypeDef
		{
			$current = $this_DataTypeDef_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementDefAccess().getDimensionDefParserRuleCall_1());
		}
		this_DimensionDef_1=ruleDimensionDef
		{
			$current = $this_DimensionDef_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementDefAccess().getUnitDefParserRuleCall_2());
		}
		this_UnitDef_2=ruleUnitDef
		{
			$current = $this_UnitDef_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementDefAccess().getValueTypeDefParserRuleCall_3());
		}
		this_ValueTypeDef_3=ruleValueTypeDef
		{
			$current = $this_ValueTypeDef_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementDefAccess().getEnumerationParserRuleCall_4());
		}
		this_Enumeration_4=ruleEnumeration
		{
			$current = $this_Enumeration_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementDefAccess().getComponentDefParserRuleCall_5());
		}
		this_ComponentDef_5=ruleComponentDef
		{
			$current = $this_ComponentDef_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementDefAccess().getConnectorDefParserRuleCall_6());
		}
		this_ConnectorDef_6=ruleConnectorDef
		{
			$current = $this_ConnectorDef_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementDefAccess().getCompositePortDefParserRuleCall_7());
		}
		this_CompositePortDef_7=ruleCompositePortDef
		{
			$current = $this_CompositePortDef_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementDefAccess().getSimplePortDefParserRuleCall_8());
		}
		this_SimplePortDef_8=ruleSimplePortDef
		{
			$current = $this_SimplePortDef_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementDefAccess().getActionDefParserRuleCall_9());
		}
		this_ActionDef_9=ruleActionDef
		{
			$current = $this_ActionDef_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementDefAccess().getActivityDefParserRuleCall_10());
		}
		this_ActivityDef_10=ruleActivityDef
		{
			$current = $this_ActivityDef_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementDefAccess().getProtocolParserRuleCall_11());
		}
		this_Protocol_11=ruleProtocol
		{
			$current = $this_Protocol_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementDefAccess().getConstraintDefParserRuleCall_12());
		}
		this_ConstraintDef_12=ruleConstraintDef
		{
			$current = $this_ConstraintDef_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementDefAccess().getExecutableParserRuleCall_13());
		}
		this_Executable_13=ruleExecutable
		{
			$current = $this_Executable_13.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypeUse
entryRuleTypeUse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeUseRule()); }
	iv_ruleTypeUse=ruleTypeUse
	{ $current=$iv_ruleTypeUse.current; }
	EOF;

// Rule TypeUse
ruleTypeUse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getTypeUseAccess().getTypeUse_ImplParserRuleCall());
	}
	this_TypeUse_Impl_0=ruleTypeUse_Impl
	{
		$current = $this_TypeUse_Impl_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleStructuralDef
entryRuleStructuralDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructuralDefRule()); }
	iv_ruleStructuralDef=ruleStructuralDef
	{ $current=$iv_ruleStructuralDef.current; }
	EOF;

// Rule StructuralDef
ruleStructuralDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStructuralDefAccess().getComponentDefParserRuleCall_0());
		}
		this_ComponentDef_0=ruleComponentDef
		{
			$current = $this_ComponentDef_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStructuralDefAccess().getConnectorDefParserRuleCall_1());
		}
		this_ConnectorDef_1=ruleConnectorDef
		{
			$current = $this_ConnectorDef_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStructuralDefAccess().getCompositePortDefParserRuleCall_2());
		}
		this_CompositePortDef_2=ruleCompositePortDef
		{
			$current = $this_CompositePortDef_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStructuralDefAccess().getSimplePortDefParserRuleCall_3());
		}
		this_SimplePortDef_3=ruleSimplePortDef
		{
			$current = $this_SimplePortDef_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDataDef
entryRuleDataDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataDefRule()); }
	iv_ruleDataDef=ruleDataDef
	{ $current=$iv_ruleDataDef.current; }
	EOF;

// Rule DataDef
ruleDataDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDataDefAccess().getDataTypeDefParserRuleCall_0());
		}
		this_DataTypeDef_0=ruleDataTypeDef
		{
			$current = $this_DataTypeDef_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataDefAccess().getDimensionDefParserRuleCall_1());
		}
		this_DimensionDef_1=ruleDimensionDef
		{
			$current = $this_DimensionDef_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataDefAccess().getUnitDefParserRuleCall_2());
		}
		this_UnitDef_2=ruleUnitDef
		{
			$current = $this_UnitDef_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataDefAccess().getValueTypeDefParserRuleCall_3());
		}
		this_ValueTypeDef_3=ruleValueTypeDef
		{
			$current = $this_ValueTypeDef_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataDefAccess().getEnumerationParserRuleCall_4());
		}
		this_Enumeration_4=ruleEnumeration
		{
			$current = $this_Enumeration_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleComponentDef
entryRuleComponentDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentDefRule()); }
	iv_ruleComponentDef=ruleComponentDef
	{ $current=$iv_ruleComponentDef.current; }
	EOF;

// Rule ComponentDef
ruleComponentDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isBoundary_0_0='boundary'
				{
					newLeafNode(lv_isBoundary_0_0, grammarAccess.getComponentDefAccess().getIsBoundaryBoundaryKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentDefRule());
					}
					setWithLastConsumed($current, "isBoundary", true, "boundary");
				}
			)
		)?
		otherlv_1='component'
		{
			newLeafNode(otherlv_1, grammarAccess.getComponentDefAccess().getComponentKeyword_1());
		}
		otherlv_2='def'
		{
			newLeafNode(otherlv_2, grammarAccess.getComponentDefAccess().getDefKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getComponentDefAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getComponentDefAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_5='ports'
			{
				newLeafNode(otherlv_5, grammarAccess.getComponentDefAccess().getPortsKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentDefAccess().getPortsPortUseParserRuleCall_5_1_0());
					}
					lv_ports_6_0=rulePortUse
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentDefRule());
						}
						add(
							$current,
							"ports",
							lv_ports_6_0,
							"br.consiste.SysADL.PortUse");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentDefAccess().getPropertiesPropertyParserRuleCall_6_0_0());
					}
					lv_properties_7_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentDefRule());
						}
						add(
							$current,
							"properties",
							lv_properties_7_0,
							"br.consiste.SysADL.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentDefAccess().getArchDefsStructuralDefParserRuleCall_6_1_0());
					}
					lv_archDefs_8_0=ruleStructuralDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentDefRule());
						}
						add(
							$current,
							"archDefs",
							lv_archDefs_8_0,
							"br.consiste.SysADL.StructuralDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentDefAccess().getDataDefsDataDefParserRuleCall_6_2_0());
					}
					lv_dataDefs_9_0=ruleDataDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentDefRule());
						}
						add(
							$current,
							"dataDefs",
							lv_dataDefs_9_0,
							"br.consiste.SysADL.DataDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentDefAccess().getCompositeConfigurationParserRuleCall_7_0());
				}
				lv_composite_10_0=ruleConfiguration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentDefRule());
					}
					set(
						$current,
						"composite",
						lv_composite_10_0,
						"br.consiste.SysADL.Configuration");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getComponentDefAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleArchitectureDef
entryRuleArchitectureDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArchitectureDefRule()); }
	iv_ruleArchitectureDef=ruleArchitectureDef
	{ $current=$iv_ruleArchitectureDef.current; }
	EOF;

// Rule ArchitectureDef
ruleArchitectureDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='architecture'
		{
			newLeafNode(otherlv_0, grammarAccess.getArchitectureDefAccess().getArchitectureKeyword_0());
		}
		otherlv_1='def'
		{
			newLeafNode(otherlv_1, grammarAccess.getArchitectureDefAccess().getDefKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getArchitectureDefAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArchitectureDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getArchitectureDefAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='ports'
		{
			newLeafNode(otherlv_4, grammarAccess.getArchitectureDefAccess().getPortsKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArchitectureDefAccess().getPortsPortUseParserRuleCall_5_0());
				}
				lv_ports_5_0=rulePortUse
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArchitectureDefRule());
					}
					add(
						$current,
						"ports",
						lv_ports_5_0,
						"br.consiste.SysADL.PortUse");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getArchitectureDefAccess().getPropertiesPropertyParserRuleCall_6_0());
				}
				lv_properties_6_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArchitectureDefRule());
					}
					add(
						$current,
						"properties",
						lv_properties_6_0,
						"br.consiste.SysADL.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getArchitectureDefAccess().getCompositeConfigurationParserRuleCall_7_0());
				}
				lv_composite_7_0=ruleConfiguration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArchitectureDefRule());
					}
					set(
						$current,
						"composite",
						lv_composite_7_0,
						"br.consiste.SysADL.Configuration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getArchitectureDefAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRulePin
entryRulePin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPinRule()); }
	iv_rulePin=rulePin
	{ $current=$iv_rulePin.current; }
	EOF;

// Rule Pin
rulePin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPinAccess().getPinAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPinAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPinRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getPinAccess().getColonKeyword_2());
		}
		(
			(
				lv_isFlow_3_0='flow'
				{
					newLeafNode(lv_isFlow_3_0, grammarAccess.getPinAccess().getIsFlowFlowKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPinRule());
					}
					setWithLastConsumed($current, "isFlow", true, "flow");
				}
			)
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPinRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getPinAccess().getDefinitionTypeDefCrossReference_4_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBehaviorDef
entryRuleBehaviorDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBehaviorDefRule()); }
	iv_ruleBehaviorDef=ruleBehaviorDef
	{ $current=$iv_ruleBehaviorDef.current; }
	EOF;

// Rule BehaviorDef
ruleBehaviorDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBehaviorDefAccess().getActivityDefParserRuleCall_0());
		}
		this_ActivityDef_0=ruleActivityDef
		{
			$current = $this_ActivityDef_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBehaviorDefAccess().getProtocolParserRuleCall_1());
		}
		this_Protocol_1=ruleProtocol
		{
			$current = $this_Protocol_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBehaviorDefAccess().getConstraintDefParserRuleCall_2());
		}
		this_ConstraintDef_2=ruleConstraintDef
		{
			$current = $this_ConstraintDef_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBehaviorDefAccess().getActionDefParserRuleCall_3());
		}
		this_ActionDef_3=ruleActionDef
		{
			$current = $this_ActionDef_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleActionUse
entryRuleActionUse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionUseRule()); }
	iv_ruleActionUse=ruleActionUse
	{ $current=$iv_ruleActionUse.current; }
	EOF;

// Rule ActionUse
ruleActionUse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getActionUseAccess().getActionUseAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getActionUseAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionUseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getActionUseAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionUseRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getActionUseAccess().getDefinitionActionDefCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getActionUseAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_5='using'
			{
				newLeafNode(otherlv_5, grammarAccess.getActionUseAccess().getUsingKeyword_5_0());
			}
			otherlv_6='pins'
			{
				newLeafNode(otherlv_6, grammarAccess.getActionUseAccess().getPinsKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionUseAccess().getPinInPinParserRuleCall_5_2_0());
					}
					lv_pinIn_7_0=rulePin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionUseRule());
						}
						add(
							$current,
							"pinIn",
							lv_pinIn_7_0,
							"br.consiste.SysADL.Pin");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getActionUseAccess().getPropertiesPropertyParserRuleCall_6_0());
				}
				lv_properties_8_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionUseRule());
					}
					add(
						$current,
						"properties",
						lv_properties_8_0,
						"br.consiste.SysADL.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getActionUseAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleActivityRelation
entryRuleActivityRelation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActivityRelationRule()); }
	iv_ruleActivityRelation=ruleActivityRelation
	{ $current=$iv_ruleActivityRelation.current; }
	EOF;

// Rule ActivityRelation
ruleActivityRelation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getActivityRelationAccess().getActivityDelegationParserRuleCall_0());
		}
		this_ActivityDelegation_0=ruleActivityDelegation
		{
			$current = $this_ActivityDelegation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActivityRelationAccess().getActivityFlowParserRuleCall_1());
		}
		this_ActivityFlow_1=ruleActivityFlow
		{
			$current = $this_ActivityFlow_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDataObject
entryRuleDataObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataObjectRule()); }
	iv_ruleDataObject=ruleDataObject
	{ $current=$iv_ruleDataObject.current; }
	EOF;

// Rule DataObject
ruleDataObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDataObjectAccess().getDataStoreParserRuleCall_0());
		}
		this_DataStore_0=ruleDataStore
		{
			$current = $this_DataStore_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataObjectAccess().getDataBufferParserRuleCall_1());
		}
		this_DataBuffer_1=ruleDataBuffer
		{
			$current = $this_DataBuffer_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	iv_ruleProperty=ruleProperty
	{ $current=$iv_ruleProperty.current; }
	EOF;

// Rule Property
ruleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPropertyAccess().getPropertyAction_0(),
					$current);
			}
		)
		otherlv_1='property'
		{
			newLeafNode(otherlv_1, grammarAccess.getPropertyAccess().getPropertyKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getPropertyAccess().getColonKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPropertyRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getPropertyAccess().getTypeTypeDefCrossReference_3_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='='
			{
				newLeafNode(otherlv_5, grammarAccess.getPropertyAccess().getEqualsSignKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPropertyAccess().getValueExpressionParserRuleCall_4_1_0());
					}
					lv_value_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropertyRule());
						}
						set(
							$current,
							"value",
							lv_value_6_0,
							"br.consiste.SysADL.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getPropertyAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	iv_rulePackage=rulePackage
	{ $current=$iv_rulePackage.current; }
	EOF;

// Rule Package
rulePackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPackageAccess().getPackageAction_0(),
					$current);
			}
		)
		otherlv_1='package'
		{
			newLeafNode(otherlv_1, grammarAccess.getPackageAccess().getPackageKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageAccess().getNameQualifiedNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"br.consiste.SysADL.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='import'
			{
				newLeafNode(otherlv_4, grammarAccess.getPackageAccess().getImportKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPackageRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getPackageAccess().getImportsPackageCrossReference_4_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=';'
			{
				newLeafNode(otherlv_6, grammarAccess.getPackageAccess().getSemicolonKeyword_4_2());
			}
		)*
		(
			otherlv_7='using'
			{
				newLeafNode(otherlv_7, grammarAccess.getPackageAccess().getUsingKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPackageRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getPackageAccess().getElementImportsElementDefCrossReference_5_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=';'
			{
				newLeafNode(otherlv_9, grammarAccess.getPackageAccess().getSemicolonKeyword_5_2());
			}
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageAccess().getPropertiesPropertyParserRuleCall_6_0_0());
					}
					lv_properties_10_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageRule());
						}
						add(
							$current,
							"properties",
							lv_properties_10_0,
							"br.consiste.SysADL.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageAccess().getArchitecturesElementDefParserRuleCall_6_1_0());
					}
					lv_architectures_11_0=ruleElementDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageRule());
						}
						add(
							$current,
							"architectures",
							lv_architectures_11_0,
							"br.consiste.SysADL.ElementDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageAccess().getArchitecturesArchitectureDefParserRuleCall_6_2_0());
					}
					lv_architectures_12_0=ruleArchitectureDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageRule());
						}
						add(
							$current,
							"architectures",
							lv_architectures_12_0,
							"br.consiste.SysADL.ArchitectureDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleRequirement
entryRuleRequirement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequirementRule()); }
	iv_ruleRequirement=ruleRequirement
	{ $current=$iv_ruleRequirement.current; }
	EOF;

// Rule Requirement
ruleRequirement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Requirement'
		{
			newLeafNode(otherlv_0, grammarAccess.getRequirementAccess().getRequirementKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRequirementAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRequirementRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getRequirementAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRequirementAccess().getIdEFloatParserRuleCall_3_0());
				}
				lv_id_3_0=ruleEFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequirementRule());
					}
					set(
						$current,
						"id",
						lv_id_3_0,
						"br.consiste.SysADL.EFloat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getRequirementAccess().getRightParenthesisKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getRequirementAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			otherlv_6='text'
			{
				newLeafNode(otherlv_6, grammarAccess.getRequirementAccess().getTextKeyword_6_0());
			}
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getRequirementAccess().getEqualsSignKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getTextEStringParserRuleCall_6_2_0());
					}
					lv_text_8_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementRule());
						}
						set(
							$current,
							"text",
							lv_text_8_0,
							"br.consiste.SysADL.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='satisfiedBy'
			{
				newLeafNode(otherlv_9, grammarAccess.getRequirementAccess().getSatisfiedByKeyword_7_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRequirementRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getSatisfiedByElementDefCrossReference_7_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getRequirementAccess().getCommaKeyword_7_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRequirementRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getRequirementAccess().getSatisfiedByElementDefCrossReference_7_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_13=';'
			{
				newLeafNode(otherlv_13, grammarAccess.getRequirementAccess().getSemicolonKeyword_7_3());
			}
		)?
		(
			otherlv_14='derive'
			{
				newLeafNode(otherlv_14, grammarAccess.getRequirementAccess().getDeriveKeyword_8_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRequirementRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getDerivedByRequirementCrossReference_8_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_16=','
				{
					newLeafNode(otherlv_16, grammarAccess.getRequirementAccess().getCommaKeyword_8_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRequirementRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getRequirementAccess().getDerivedByRequirementCrossReference_8_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_18=';'
			{
				newLeafNode(otherlv_18, grammarAccess.getRequirementAccess().getSemicolonKeyword_8_3());
			}
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getPropertiesPropertyParserRuleCall_9_0_0());
					}
					lv_properties_19_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementRule());
						}
						add(
							$current,
							"properties",
							lv_properties_19_0,
							"br.consiste.SysADL.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getCompositionRequirementParserRuleCall_9_1_0());
					}
					lv_composition_20_0=ruleRequirement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementRule());
						}
						add(
							$current,
							"composition",
							lv_composition_20_0,
							"br.consiste.SysADL.Requirement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_21='}'
		{
			newLeafNode(otherlv_21, grammarAccess.getRequirementAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleDataTypeDef
entryRuleDataTypeDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeDefRule()); }
	iv_ruleDataTypeDef=ruleDataTypeDef
	{ $current=$iv_ruleDataTypeDef.current; }
	EOF;

// Rule DataTypeDef
ruleDataTypeDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDataTypeDefAccess().getDataTypeDefAction_0(),
					$current);
			}
		)
		otherlv_1='datatype'
		{
			newLeafNode(otherlv_1, grammarAccess.getDataTypeDefAccess().getDatatypeKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDataTypeDefAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='extends'
			{
				newLeafNode(otherlv_3, grammarAccess.getDataTypeDefAccess().getExtendsKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataTypeDefRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDataTypeDefAccess().getSuperTypeDataTypeDefCrossReference_3_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getDataTypeDefAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_6='attributes'
			{
				newLeafNode(otherlv_6, grammarAccess.getDataTypeDefAccess().getAttributesKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataTypeDefAccess().getDataTypeAttributesTypeUseParserRuleCall_5_1_0());
					}
					lv_dataTypeAttributes_7_0=ruleTypeUse
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataTypeDefRule());
						}
						add(
							$current,
							"dataTypeAttributes",
							lv_dataTypeAttributes_7_0,
							"br.consiste.SysADL.TypeUse");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDataTypeDefAccess().getPropertiesPropertyParserRuleCall_6_0());
				}
				lv_properties_8_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataTypeDefRule());
					}
					add(
						$current,
						"properties",
						lv_properties_8_0,
						"br.consiste.SysADL.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getDataTypeDefAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleValueTypeDef
entryRuleValueTypeDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueTypeDefRule()); }
	iv_ruleValueTypeDef=ruleValueTypeDef
	{ $current=$iv_ruleValueTypeDef.current; }
	EOF;

// Rule ValueTypeDef
ruleValueTypeDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getValueTypeDefAccess().getValueTypeDefAction_0(),
					$current);
			}
		)
		otherlv_1='value'
		{
			newLeafNode(otherlv_1, grammarAccess.getValueTypeDefAccess().getValueKeyword_1());
		}
		otherlv_2='type'
		{
			newLeafNode(otherlv_2, grammarAccess.getValueTypeDefAccess().getTypeKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getValueTypeDefAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueTypeDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4='extends'
			{
				newLeafNode(otherlv_4, grammarAccess.getValueTypeDefAccess().getExtendsKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueTypeDefRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getValueTypeDefAccess().getSuperTypeValueTypeDefCrossReference_4_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getValueTypeDefAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			otherlv_7='unit'
			{
				newLeafNode(otherlv_7, grammarAccess.getValueTypeDefAccess().getUnitKeyword_6_0());
			}
			otherlv_8='='
			{
				newLeafNode(otherlv_8, grammarAccess.getValueTypeDefAccess().getEqualsSignKeyword_6_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueTypeDefRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getValueTypeDefAccess().getUnitUnitDefCrossReference_6_2_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='dimension'
			{
				newLeafNode(otherlv_10, grammarAccess.getValueTypeDefAccess().getDimensionKeyword_7_0());
			}
			otherlv_11='='
			{
				newLeafNode(otherlv_11, grammarAccess.getValueTypeDefAccess().getEqualsSignKeyword_7_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueTypeDefRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getValueTypeDefAccess().getDimensionDimensionDefCrossReference_7_2_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getValueTypeDefAccess().getPropertiesPropertyParserRuleCall_8_0());
				}
				lv_properties_13_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueTypeDefRule());
					}
					add(
						$current,
						"properties",
						lv_properties_13_0,
						"br.consiste.SysADL.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getValueTypeDefAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleEnumeration
entryRuleEnumeration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumerationRule()); }
	iv_ruleEnumeration=ruleEnumeration
	{ $current=$iv_ruleEnumeration.current; }
	EOF;

// Rule Enumeration
ruleEnumeration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEnumerationAccess().getEnumerationAction_0(),
					$current);
			}
		)
		otherlv_1='enum'
		{
			newLeafNode(otherlv_1, grammarAccess.getEnumerationAccess().getEnumKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getEnumerationAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumerationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getEnumerationAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumerationAccess().getPropertiesPropertyParserRuleCall_4_0());
				}
				lv_properties_4_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumerationRule());
					}
					add(
						$current,
						"properties",
						lv_properties_4_0,
						"br.consiste.SysADL.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumerationAccess().getLiteralsEnumLiteralValueParserRuleCall_5_0());
				}
				lv_literals_5_0=ruleEnumLiteralValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumerationRule());
					}
					add(
						$current,
						"literals",
						lv_literals_5_0,
						"br.consiste.SysADL.EnumLiteralValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getEnumerationAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumerationAccess().getLiteralsEnumLiteralValueParserRuleCall_6_1_0());
					}
					lv_literals_7_0=ruleEnumLiteralValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumerationRule());
						}
						add(
							$current,
							"literals",
							lv_literals_7_0,
							"br.consiste.SysADL.EnumLiteralValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getEnumerationAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleTypeUse_Impl
entryRuleTypeUse_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeUse_ImplRule()); }
	iv_ruleTypeUse_Impl=ruleTypeUse_Impl
	{ $current=$iv_ruleTypeUse_Impl.current; }
	EOF;

// Rule TypeUse_Impl
ruleTypeUse_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getTypeUse_ImplAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeUse_ImplRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTypeUse_ImplAccess().getColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeUse_ImplRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTypeUse_ImplAccess().getDefinitionTypeDefCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getTypeUse_ImplAccess().getLeftCurlyBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeUse_ImplAccess().getPropertiesPropertyParserRuleCall_3_1_0());
					}
					lv_properties_4_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeUse_ImplRule());
						}
						add(
							$current,
							"properties",
							lv_properties_4_0,
							"br.consiste.SysADL.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getTypeUse_ImplAccess().getRightCurlyBracketKeyword_3_2());
			}
		)?
	)
;

// Entry rule entryRuleEnumLiteralValue
entryRuleEnumLiteralValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumLiteralValueRule()); }
	iv_ruleEnumLiteralValue=ruleEnumLiteralValue
	{ $current=$iv_ruleEnumLiteralValue.current; }
	EOF;

// Rule EnumLiteralValue
ruleEnumLiteralValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getEnumLiteralValueAccess().getKeyEStringParserRuleCall_0());
			}
			lv_key_0_0=ruleEString
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getEnumLiteralValueRule());
				}
				set(
					$current,
					"key",
					lv_key_0_0,
					"br.consiste.SysADL.EString");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleDimensionDef
entryRuleDimensionDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDimensionDefRule()); }
	iv_ruleDimensionDef=ruleDimensionDef
	{ $current=$iv_ruleDimensionDef.current; }
	EOF;

// Rule DimensionDef
ruleDimensionDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDimensionDefAccess().getDimensionDefAction_0(),
					$current);
			}
		)
		otherlv_1='dimension'
		{
			newLeafNode(otherlv_1, grammarAccess.getDimensionDefAccess().getDimensionKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDimensionDefAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimensionDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getDimensionDefAccess().getLeftCurlyBracketKeyword_3_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getDimensionDefAccess().getPropertiesPropertyParserRuleCall_3_1_0_0());
						}
						lv_properties_4_0=ruleProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDimensionDefRule());
							}
							add(
								$current,
								"properties",
								lv_properties_4_0,
								"br.consiste.SysADL.Property");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_5=','
					{
						newLeafNode(otherlv_5, grammarAccess.getDimensionDefAccess().getCommaKeyword_3_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getDimensionDefAccess().getPropertiesPropertyParserRuleCall_3_1_1_1_0());
							}
							lv_properties_6_0=ruleProperty
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDimensionDefRule());
								}
								add(
									$current,
									"properties",
									lv_properties_6_0,
									"br.consiste.SysADL.Property");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getDimensionDefAccess().getRightCurlyBracketKeyword_3_2());
			}
		)?
	)
;

// Entry rule entryRuleUnitDef
entryRuleUnitDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitDefRule()); }
	iv_ruleUnitDef=ruleUnitDef
	{ $current=$iv_ruleUnitDef.current; }
	EOF;

// Rule UnitDef
ruleUnitDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUnitDefAccess().getUnitDefAction_0(),
					$current);
			}
		)
		otherlv_1='unit'
		{
			newLeafNode(otherlv_1, grammarAccess.getUnitDefAccess().getUnitKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getUnitDefAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnitDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getUnitDefAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='dimension'
			{
				newLeafNode(otherlv_4, grammarAccess.getUnitDefAccess().getDimensionKeyword_4_0());
			}
			otherlv_5='='
			{
				newLeafNode(otherlv_5, grammarAccess.getUnitDefAccess().getEqualsSignKeyword_4_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitDefRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getUnitDefAccess().getDimensionDimensionDefCrossReference_4_2_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getUnitDefAccess().getPropertiesPropertyParserRuleCall_5_0_0());
					}
					lv_properties_7_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnitDefRule());
						}
						add(
							$current,
							"properties",
							lv_properties_7_0,
							"br.consiste.SysADL.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getUnitDefAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getUnitDefAccess().getPropertiesPropertyParserRuleCall_5_1_1_0());
						}
						lv_properties_9_0=ruleProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnitDefRule());
							}
							add(
								$current,
								"properties",
								lv_properties_9_0,
								"br.consiste.SysADL.Property");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getUnitDefAccess().getRightCurlyBracketKeyword_5_2());
			}
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getUnitDefAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleComponentUse
entryRuleComponentUse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentUseRule()); }
	iv_ruleComponentUse=ruleComponentUse
	{ $current=$iv_ruleComponentUse.current; }
	EOF;

// Rule ComponentUse
ruleComponentUse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getComponentUseAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentUseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getComponentUseAccess().getColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentUseRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getComponentUseAccess().getDefinitionComponentDefCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='['
			{
				newLeafNode(otherlv_3, grammarAccess.getComponentUseAccess().getLeftSquareBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentUseAccess().getLowerBoundEIntParserRuleCall_3_1_0());
					}
					lv_lowerBound_4_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentUseRule());
						}
						set(
							$current,
							"lowerBound",
							lv_lowerBound_4_0,
							"br.consiste.SysADL.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getComponentUseAccess().getCommaKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentUseAccess().getUpperBoundEIntParserRuleCall_3_3_0());
					}
					lv_upperBound_6_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentUseRule());
						}
						set(
							$current,
							"upperBound",
							lv_upperBound_6_0,
							"br.consiste.SysADL.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getComponentUseAccess().getRightSquareBracketKeyword_3_4());
			}
		)?
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getComponentUseAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_9='using'
			{
				newLeafNode(otherlv_9, grammarAccess.getComponentUseAccess().getUsingKeyword_5_0());
			}
			otherlv_10='ports'
			{
				newLeafNode(otherlv_10, grammarAccess.getComponentUseAccess().getPortsKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentUseAccess().getPortsPortUseParserRuleCall_5_2_0());
					}
					lv_ports_11_0=rulePortUse
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentUseRule());
						}
						add(
							$current,
							"ports",
							lv_ports_11_0,
							"br.consiste.SysADL.PortUse");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentUseAccess().getPropertiesPropertyParserRuleCall_6_0());
				}
				lv_properties_12_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentUseRule());
					}
					add(
						$current,
						"properties",
						lv_properties_12_0,
						"br.consiste.SysADL.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getComponentUseAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleConnectorDef
entryRuleConnectorDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectorDefRule()); }
	iv_ruleConnectorDef=ruleConnectorDef
	{ $current=$iv_ruleConnectorDef.current; }
	EOF;

// Rule ConnectorDef
ruleConnectorDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='connector'
		{
			newLeafNode(otherlv_0, grammarAccess.getConnectorDefAccess().getConnectorKeyword_0());
		}
		otherlv_1='def'
		{
			newLeafNode(otherlv_1, grammarAccess.getConnectorDefAccess().getDefKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getConnectorDefAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectorDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getConnectorDefAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='participants'
			{
				newLeafNode(otherlv_4, grammarAccess.getConnectorDefAccess().getParticipantsKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectorDefAccess().getPortsPortUse_ReverseParserRuleCall_4_1_0());
					}
					lv_ports_5_0=rulePortUse_Reverse
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectorDefRule());
						}
						add(
							$current,
							"ports",
							lv_ports_5_0,
							"br.consiste.SysADL.PortUse_Reverse");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectorDefAccess().getCompositeConfigurationParserRuleCall_5_0());
				}
				lv_composite_6_0=ruleConfiguration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectorDefRule());
					}
					set(
						$current,
						"composite",
						lv_composite_6_0,
						"br.consiste.SysADL.Configuration");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_7='flows'
			{
				newLeafNode(otherlv_7, grammarAccess.getConnectorDefAccess().getFlowsKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectorDefAccess().getFlowsFlowParserRuleCall_6_1_0());
					}
					lv_flows_8_0=ruleFlow
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectorDefRule());
						}
						add(
							$current,
							"flows",
							lv_flows_8_0,
							"br.consiste.SysADL.Flow");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectorDefAccess().getPropertiesPropertyParserRuleCall_7_0_0());
					}
					lv_properties_9_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectorDefRule());
						}
						add(
							$current,
							"properties",
							lv_properties_9_0,
							"br.consiste.SysADL.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectorDefAccess().getArchDefsStructuralDefParserRuleCall_7_1_0());
					}
					lv_archDefs_10_0=ruleStructuralDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectorDefRule());
						}
						add(
							$current,
							"archDefs",
							lv_archDefs_10_0,
							"br.consiste.SysADL.StructuralDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectorDefAccess().getDataDefsDataDefParserRuleCall_7_2_0());
					}
					lv_dataDefs_11_0=ruleDataDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectorDefRule());
						}
						add(
							$current,
							"dataDefs",
							lv_dataDefs_11_0,
							"br.consiste.SysADL.DataDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getConnectorDefAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleConnectorUse
entryRuleConnectorUse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectorUseRule()); }
	iv_ruleConnectorUse=ruleConnectorUse
	{ $current=$iv_ruleConnectorUse.current; }
	EOF;

// Rule ConnectorUse
ruleConnectorUse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getConnectorUseAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectorUseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getConnectorUseAccess().getColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectorUseRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getConnectorUseAccess().getDefinitionConnectorDefCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='['
			{
				newLeafNode(otherlv_3, grammarAccess.getConnectorUseAccess().getLeftSquareBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectorUseAccess().getLowerBoundEIntParserRuleCall_3_1_0());
					}
					lv_lowerBound_4_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectorUseRule());
						}
						set(
							$current,
							"lowerBound",
							lv_lowerBound_4_0,
							"br.consiste.SysADL.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getConnectorUseAccess().getCommaKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectorUseAccess().getUpperBoundEIntParserRuleCall_3_3_0());
					}
					lv_upperBound_6_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectorUseRule());
						}
						set(
							$current,
							"upperBound",
							lv_upperBound_6_0,
							"br.consiste.SysADL.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getConnectorUseAccess().getRightSquareBracketKeyword_3_4());
			}
		)?
		(
			otherlv_8='bindings'
			{
				newLeafNode(otherlv_8, grammarAccess.getConnectorUseAccess().getBindingsKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectorUseAccess().getBindingsConnectorBindingParserRuleCall_4_1_0());
					}
					lv_bindings_9_0=ruleConnectorBinding
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectorUseRule());
						}
						add(
							$current,
							"bindings",
							lv_bindings_9_0,
							"br.consiste.SysADL.ConnectorBinding");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getConnectorUseAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConnectorUseAccess().getBindingsConnectorBindingParserRuleCall_4_2_1_0());
						}
						lv_bindings_11_0=ruleConnectorBinding
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConnectorUseRule());
							}
							add(
								$current,
								"bindings",
								lv_bindings_11_0,
								"br.consiste.SysADL.ConnectorBinding");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_12='{'
			{
				newLeafNode(otherlv_12, grammarAccess.getConnectorUseAccess().getLeftCurlyBracketKeyword_5_0());
			}
			otherlv_13='ports'
			{
				newLeafNode(otherlv_13, grammarAccess.getConnectorUseAccess().getPortsKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectorUseAccess().getPortsPortUse_ReverseParserRuleCall_5_2_0());
					}
					lv_ports_14_0=rulePortUse_Reverse
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectorUseRule());
						}
						add(
							$current,
							"ports",
							lv_ports_14_0,
							"br.consiste.SysADL.PortUse_Reverse");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectorUseAccess().getPropertiesPropertyParserRuleCall_5_3_0());
					}
					lv_properties_15_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectorUseRule());
						}
						add(
							$current,
							"properties",
							lv_properties_15_0,
							"br.consiste.SysADL.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_16='}'
			{
				newLeafNode(otherlv_16, grammarAccess.getConnectorUseAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
	)
;

// Entry rule entryRuleCompositePortDef
entryRuleCompositePortDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositePortDefRule()); }
	iv_ruleCompositePortDef=ruleCompositePortDef
	{ $current=$iv_ruleCompositePortDef.current; }
	EOF;

// Rule CompositePortDef
ruleCompositePortDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='port'
		{
			newLeafNode(otherlv_0, grammarAccess.getCompositePortDefAccess().getPortKeyword_0());
		}
		otherlv_1='def'
		{
			newLeafNode(otherlv_1, grammarAccess.getCompositePortDefAccess().getDefKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getCompositePortDefAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompositePortDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getCompositePortDefAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='ports'
		{
			newLeafNode(otherlv_4, grammarAccess.getCompositePortDefAccess().getPortsKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositePortDefAccess().getPortsPortUseParserRuleCall_5_0());
				}
				lv_ports_5_0=rulePortUse
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositePortDefRule());
					}
					add(
						$current,
						"ports",
						lv_ports_5_0,
						"br.consiste.SysADL.PortUse");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositePortDefAccess().getPropertiesPropertyParserRuleCall_6_0_0());
					}
					lv_properties_6_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositePortDefRule());
						}
						add(
							$current,
							"properties",
							lv_properties_6_0,
							"br.consiste.SysADL.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositePortDefAccess().getArchDefsStructuralDefParserRuleCall_6_1_0());
					}
					lv_archDefs_7_0=ruleStructuralDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositePortDefRule());
						}
						add(
							$current,
							"archDefs",
							lv_archDefs_7_0,
							"br.consiste.SysADL.StructuralDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositePortDefAccess().getDataDefsDataDefParserRuleCall_6_2_0());
					}
					lv_dataDefs_8_0=ruleDataDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositePortDefRule());
						}
						add(
							$current,
							"dataDefs",
							lv_dataDefs_8_0,
							"br.consiste.SysADL.DataDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getCompositePortDefAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleSimplePortDef
entryRuleSimplePortDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimplePortDefRule()); }
	iv_ruleSimplePortDef=ruleSimplePortDef
	{ $current=$iv_ruleSimplePortDef.current; }
	EOF;

// Rule SimplePortDef
ruleSimplePortDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='port'
		{
			newLeafNode(otherlv_0, grammarAccess.getSimplePortDefAccess().getPortKeyword_0());
		}
		otherlv_1='def'
		{
			newLeafNode(otherlv_1, grammarAccess.getSimplePortDefAccess().getDefKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getSimplePortDefAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimplePortDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSimplePortDefAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='flow'
		{
			newLeafNode(otherlv_4, grammarAccess.getSimplePortDefAccess().getFlowKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimplePortDefAccess().getFlowPropertiesFlowPropertyEnumRuleCall_5_0());
				}
				lv_flowProperties_5_0=ruleFlowProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimplePortDefRule());
					}
					set(
						$current,
						"flowProperties",
						lv_flowProperties_5_0,
						"br.consiste.SysADL.FlowProperty");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimplePortDefRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSimplePortDefAccess().getFlowTypeTypeDefCrossReference_6_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSimplePortDefAccess().getPropertiesPropertyParserRuleCall_7_0_0());
					}
					lv_properties_7_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimplePortDefRule());
						}
						add(
							$current,
							"properties",
							lv_properties_7_0,
							"br.consiste.SysADL.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSimplePortDefAccess().getArchDefsStructuralDefParserRuleCall_7_1_0());
					}
					lv_archDefs_8_0=ruleStructuralDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimplePortDefRule());
						}
						add(
							$current,
							"archDefs",
							lv_archDefs_8_0,
							"br.consiste.SysADL.StructuralDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSimplePortDefAccess().getDataDefsDataDefParserRuleCall_7_2_0());
					}
					lv_dataDefs_9_0=ruleDataDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimplePortDefRule());
						}
						add(
							$current,
							"dataDefs",
							lv_dataDefs_9_0,
							"br.consiste.SysADL.DataDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getSimplePortDefAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRulePortUse
entryRulePortUse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPortUseRule()); }
	iv_rulePortUse=rulePortUse
	{ $current=$iv_rulePortUse.current; }
	EOF;

// Rule PortUse
rulePortUse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPortUseAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPortUseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getPortUseAccess().getColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPortUseRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getPortUseAccess().getDefinitionPortDefCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='['
			{
				newLeafNode(otherlv_3, grammarAccess.getPortUseAccess().getLeftSquareBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPortUseAccess().getLowerBoundEIntParserRuleCall_3_1_0());
					}
					lv_lowerBound_4_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPortUseRule());
						}
						set(
							$current,
							"lowerBound",
							lv_lowerBound_4_0,
							"br.consiste.SysADL.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getPortUseAccess().getCommaKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPortUseAccess().getUpperBoundEIntParserRuleCall_3_3_0());
					}
					lv_upperBound_6_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPortUseRule());
						}
						set(
							$current,
							"upperBound",
							lv_upperBound_6_0,
							"br.consiste.SysADL.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getPortUseAccess().getRightSquareBracketKeyword_3_4());
			}
		)?
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getPortUseAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPortUseAccess().getPropertiesPropertyParserRuleCall_5_0());
				}
				lv_properties_9_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPortUseRule());
					}
					add(
						$current,
						"properties",
						lv_properties_9_0,
						"br.consiste.SysADL.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getPortUseAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRulePortUse_Reverse
entryRulePortUse_Reverse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPortUse_ReverseRule()); }
	iv_rulePortUse_Reverse=rulePortUse_Reverse
	{ $current=$iv_rulePortUse_Reverse.current; }
	EOF;

// Rule PortUse_Reverse
rulePortUse_Reverse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='~'
		{
			newLeafNode(otherlv_0, grammarAccess.getPortUse_ReverseAccess().getTildeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPortUse_ReverseAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPortUse_ReverseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getPortUse_ReverseAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPortUse_ReverseRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getPortUse_ReverseAccess().getDefinitionPortDefCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getPortUse_ReverseAccess().getLeftSquareBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPortUse_ReverseAccess().getLowerBoundEIntParserRuleCall_4_1_0());
					}
					lv_lowerBound_5_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPortUse_ReverseRule());
						}
						set(
							$current,
							"lowerBound",
							lv_lowerBound_5_0,
							"br.consiste.SysADL.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getPortUse_ReverseAccess().getCommaKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPortUse_ReverseAccess().getUpperBoundEIntParserRuleCall_4_3_0());
					}
					lv_upperBound_7_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPortUse_ReverseRule());
						}
						set(
							$current,
							"upperBound",
							lv_upperBound_7_0,
							"br.consiste.SysADL.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8=']'
			{
				newLeafNode(otherlv_8, grammarAccess.getPortUse_ReverseAccess().getRightSquareBracketKeyword_4_4());
			}
		)?
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getPortUse_ReverseAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPortUse_ReverseAccess().getPropertiesPropertyParserRuleCall_6_0());
				}
				lv_properties_10_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPortUse_ReverseRule());
					}
					add(
						$current,
						"properties",
						lv_properties_10_0,
						"br.consiste.SysADL.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getPortUse_ReverseAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleActionDef
entryRuleActionDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionDefRule()); }
	iv_ruleActionDef=ruleActionDef
	{ $current=$iv_ruleActionDef.current; }
	EOF;

// Rule ActionDef
ruleActionDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getActionDefAccess().getActionDefAction_0(),
					$current);
			}
		)
		otherlv_1='action'
		{
			newLeafNode(otherlv_1, grammarAccess.getActionDefAccess().getActionKeyword_1());
		}
		otherlv_2='def'
		{
			newLeafNode(otherlv_2, grammarAccess.getActionDefAccess().getDefKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getActionDefAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getActionDefAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActionDefAccess().getInParametersPinParserRuleCall_5_0());
				}
				lv_inParameters_5_0=rulePin
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionDefRule());
					}
					add(
						$current,
						"inParameters",
						lv_inParameters_5_0,
						"br.consiste.SysADL.Pin");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getActionDefAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionDefAccess().getInParametersPinParserRuleCall_6_1_0());
					}
					lv_inParameters_7_0=rulePin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionDefRule());
						}
						add(
							$current,
							"inParameters",
							lv_inParameters_7_0,
							"br.consiste.SysADL.Pin");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getActionDefAccess().getRightParenthesisKeyword_7());
		}
		otherlv_9=':'
		{
			newLeafNode(otherlv_9, grammarAccess.getActionDefAccess().getColonKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionDefRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getActionDefAccess().getReturnTypeTypeDefCrossReference_9_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='{'
		{
			newLeafNode(otherlv_11, grammarAccess.getActionDefAccess().getLeftCurlyBracketKeyword_10());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getActionDefAccess().getConstraintsConstraintUseParserRuleCall_11_0_0());
					}
					lv_constraints_12_0=ruleConstraintUse
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionDefRule());
						}
						add(
							$current,
							"constraints",
							lv_constraints_12_0,
							"br.consiste.SysADL.ConstraintUse");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getActionDefAccess().getDelegationsActivityDelegationParserRuleCall_11_1_0());
					}
					lv_delegations_13_0=ruleActivityDelegation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionDefRule());
						}
						add(
							$current,
							"delegations",
							lv_delegations_13_0,
							"br.consiste.SysADL.ActivityDelegation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getActionDefAccess().getPropertiesPropertyParserRuleCall_11_2_0());
					}
					lv_properties_14_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionDefRule());
						}
						add(
							$current,
							"properties",
							lv_properties_14_0,
							"br.consiste.SysADL.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getActionDefAccess().getBehaDefsBehaviorDefParserRuleCall_11_3_0());
					}
					lv_behaDefs_15_0=ruleBehaviorDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionDefRule());
						}
						add(
							$current,
							"behaDefs",
							lv_behaDefs_15_0,
							"br.consiste.SysADL.BehaviorDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getActionDefAccess().getDataDefsDataDefParserRuleCall_11_4_0());
					}
					lv_dataDefs_16_0=ruleDataDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionDefRule());
						}
						add(
							$current,
							"dataDefs",
							lv_dataDefs_16_0,
							"br.consiste.SysADL.DataDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getActionDefAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleActivityDef
entryRuleActivityDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActivityDefRule()); }
	iv_ruleActivityDef=ruleActivityDef
	{ $current=$iv_ruleActivityDef.current; }
	EOF;

// Rule ActivityDef
ruleActivityDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getActivityDefAccess().getActivityDefAction_0(),
					$current);
			}
		)
		otherlv_1='activity'
		{
			newLeafNode(otherlv_1, grammarAccess.getActivityDefAccess().getActivityKeyword_1());
		}
		otherlv_2='def'
		{
			newLeafNode(otherlv_2, grammarAccess.getActivityDefAccess().getDefKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getActivityDefAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActivityDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getActivityDefAccess().getLeftParenthesisKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityDefAccess().getInParametersPinParserRuleCall_4_1_0());
					}
					lv_inParameters_5_0=rulePin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityDefRule());
						}
						add(
							$current,
							"inParameters",
							lv_inParameters_5_0,
							"br.consiste.SysADL.Pin");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getActivityDefAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActivityDefAccess().getInParametersPinParserRuleCall_4_2_1_0());
						}
						lv_inParameters_7_0=rulePin
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActivityDefRule());
							}
							add(
								$current,
								"inParameters",
								lv_inParameters_7_0,
								"br.consiste.SysADL.Pin");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getActivityDefAccess().getRightParenthesisKeyword_4_3());
			}
		)
		(
			otherlv_9=':'
			{
				newLeafNode(otherlv_9, grammarAccess.getActivityDefAccess().getColonKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityDefAccess().getOutParametersPinParserRuleCall_5_1_0());
					}
					lv_outParameters_10_0=rulePin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityDefRule());
						}
						add(
							$current,
							"outParameters",
							lv_outParameters_10_0,
							"br.consiste.SysADL.Pin");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getActivityDefAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActivityDefAccess().getOutParametersPinParserRuleCall_5_2_1_0());
						}
						lv_outParameters_12_0=rulePin
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActivityDefRule());
							}
							add(
								$current,
								"outParameters",
								lv_outParameters_12_0,
								"br.consiste.SysADL.Pin");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_13='{'
		{
			newLeafNode(otherlv_13, grammarAccess.getActivityDefAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityDefAccess().getPropertiesPropertyParserRuleCall_7_0_0());
					}
					lv_properties_14_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityDefRule());
						}
						add(
							$current,
							"properties",
							lv_properties_14_0,
							"br.consiste.SysADL.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityDefAccess().getBehaDefsBehaviorDefParserRuleCall_7_1_0());
					}
					lv_behaDefs_15_0=ruleBehaviorDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityDefRule());
						}
						add(
							$current,
							"behaDefs",
							lv_behaDefs_15_0,
							"br.consiste.SysADL.BehaviorDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityDefAccess().getDataDefsDataDefParserRuleCall_7_2_0());
					}
					lv_dataDefs_16_0=ruleDataDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityDefRule());
						}
						add(
							$current,
							"dataDefs",
							lv_dataDefs_16_0,
							"br.consiste.SysADL.DataDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_17='constraint'
			{
				newLeafNode(otherlv_17, grammarAccess.getActivityDefAccess().getConstraintKeyword_8_0());
			}
			otherlv_18=':'
			{
				newLeafNode(otherlv_18, grammarAccess.getActivityDefAccess().getColonKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityDefAccess().getConstraintsConstraintUseParserRuleCall_8_2_0());
					}
					lv_constraints_19_0=ruleConstraintUse
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityDefRule());
						}
						add(
							$current,
							"constraints",
							lv_constraints_19_0,
							"br.consiste.SysADL.ConstraintUse");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getActivityDefAccess().getDelegationsActivityDelegationParserRuleCall_9_0());
				}
				lv_delegations_20_0=ruleActivityDelegation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActivityDefRule());
					}
					add(
						$current,
						"delegations",
						lv_delegations_20_0,
						"br.consiste.SysADL.ActivityDelegation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getActivityDefAccess().getAcbodyActivityBodyParserRuleCall_10_0());
				}
				lv_acbody_21_0=ruleActivityBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActivityDefRule());
					}
					set(
						$current,
						"acbody",
						lv_acbody_21_0,
						"br.consiste.SysADL.ActivityBody");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_22='}'
		{
			newLeafNode(otherlv_22, grammarAccess.getActivityDefAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleDataStore
entryRuleDataStore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataStoreRule()); }
	iv_ruleDataStore=ruleDataStore
	{ $current=$iv_ruleDataStore.current; }
	EOF;

// Rule DataStore
ruleDataStore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='datastore'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataStoreAccess().getDatastoreKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDataStoreAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataStoreRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getDataStoreAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataStoreRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDataStoreAccess().getTypeTypeDefCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getDataStoreAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataStoreAccess().getPropertiesPropertyParserRuleCall_5_0());
				}
				lv_properties_5_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataStoreRule());
					}
					add(
						$current,
						"properties",
						lv_properties_5_0,
						"br.consiste.SysADL.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_6='initial'
			{
				newLeafNode(otherlv_6, grammarAccess.getDataStoreAccess().getInitialKeyword_6_0());
			}
			otherlv_7='value'
			{
				newLeafNode(otherlv_7, grammarAccess.getDataStoreAccess().getValueKeyword_6_1());
			}
			otherlv_8='='
			{
				newLeafNode(otherlv_8, grammarAccess.getDataStoreAccess().getEqualsSignKeyword_6_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataStoreAccess().getInitValueExpressionParserRuleCall_6_3_0());
					}
					lv_initValue_9_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataStoreRule());
						}
						set(
							$current,
							"initValue",
							lv_initValue_9_0,
							"br.consiste.SysADL.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getDataStoreAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleDataBuffer
entryRuleDataBuffer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataBufferRule()); }
	iv_ruleDataBuffer=ruleDataBuffer
	{ $current=$iv_ruleDataBuffer.current; }
	EOF;

// Rule DataBuffer
ruleDataBuffer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='buffer'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataBufferAccess().getBufferKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDataBufferAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataBufferRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDataBufferAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='type'
		{
			newLeafNode(otherlv_3, grammarAccess.getDataBufferAccess().getTypeKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataBufferRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDataBufferAccess().getTypeTypeDefCrossReference_4_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='properties'
			{
				newLeafNode(otherlv_5, grammarAccess.getDataBufferAccess().getPropertiesKeyword_5_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getDataBufferAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataBufferAccess().getPropertiesPropertyParserRuleCall_5_2_0());
					}
					lv_properties_7_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataBufferRule());
						}
						add(
							$current,
							"properties",
							lv_properties_7_0,
							"br.consiste.SysADL.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getDataBufferAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataBufferAccess().getPropertiesPropertyParserRuleCall_5_3_1_0());
						}
						lv_properties_9_0=ruleProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataBufferRule());
							}
							add(
								$current,
								"properties",
								lv_properties_9_0,
								"br.consiste.SysADL.Property");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getDataBufferAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		(
			otherlv_11='initValue'
			{
				newLeafNode(otherlv_11, grammarAccess.getDataBufferAccess().getInitValueKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataBufferAccess().getInitValueExpressionParserRuleCall_6_1_0());
					}
					lv_initValue_12_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataBufferRule());
						}
						set(
							$current,
							"initValue",
							lv_initValue_12_0,
							"br.consiste.SysADL.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getDataBufferAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleProtocol
entryRuleProtocol returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProtocolRule()); }
	iv_ruleProtocol=ruleProtocol
	{ $current=$iv_ruleProtocol.current; }
	EOF;

// Rule Protocol
ruleProtocol returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='protocol'
		{
			newLeafNode(otherlv_0, grammarAccess.getProtocolAccess().getProtocolKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getProtocolAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProtocolRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getProtocolAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProtocolAccess().getInParametersPinParserRuleCall_2_1_0());
					}
					lv_inParameters_3_0=rulePin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProtocolRule());
						}
						add(
							$current,
							"inParameters",
							lv_inParameters_3_0,
							"br.consiste.SysADL.Pin");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getProtocolAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getProtocolAccess().getInParametersPinParserRuleCall_2_2_1_0());
						}
						lv_inParameters_5_0=rulePin
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProtocolRule());
							}
							add(
								$current,
								"inParameters",
								lv_inParameters_5_0,
								"br.consiste.SysADL.Pin");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getProtocolAccess().getRightParenthesisKeyword_2_3());
			}
		)
		(
			otherlv_7=':'
			{
				newLeafNode(otherlv_7, grammarAccess.getProtocolAccess().getColonKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProtocolAccess().getOutParametersPinParserRuleCall_3_1_0());
					}
					lv_outParameters_8_0=rulePin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProtocolRule());
						}
						add(
							$current,
							"outParameters",
							lv_outParameters_8_0,
							"br.consiste.SysADL.Pin");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getProtocolAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getProtocolAccess().getOutParametersPinParserRuleCall_3_2_1_0());
						}
						lv_outParameters_10_0=rulePin
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProtocolRule());
							}
							add(
								$current,
								"outParameters",
								lv_outParameters_10_0,
								"br.consiste.SysADL.Pin");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_11='{'
		{
			newLeafNode(otherlv_11, grammarAccess.getProtocolAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getProtocolAccess().getPropertiesPropertyParserRuleCall_5_0_0());
					}
					lv_properties_12_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProtocolRule());
						}
						add(
							$current,
							"properties",
							lv_properties_12_0,
							"br.consiste.SysADL.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getProtocolAccess().getBehaDefsBehaviorDefParserRuleCall_5_1_0());
					}
					lv_behaDefs_13_0=ruleBehaviorDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProtocolRule());
						}
						add(
							$current,
							"behaDefs",
							lv_behaDefs_13_0,
							"br.consiste.SysADL.BehaviorDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getProtocolAccess().getDataDefsDataDefParserRuleCall_5_2_0());
					}
					lv_dataDefs_14_0=ruleDataDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProtocolRule());
						}
						add(
							$current,
							"dataDefs",
							lv_dataDefs_14_0,
							"br.consiste.SysADL.DataDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_15='delegations'
			{
				newLeafNode(otherlv_15, grammarAccess.getProtocolAccess().getDelegationsKeyword_6_0());
			}
			otherlv_16=':'
			{
				newLeafNode(otherlv_16, grammarAccess.getProtocolAccess().getColonKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProtocolAccess().getDelegationsActivityDelegationParserRuleCall_6_2_0());
					}
					lv_delegations_17_0=ruleActivityDelegation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProtocolRule());
						}
						add(
							$current,
							"delegations",
							lv_delegations_17_0,
							"br.consiste.SysADL.ActivityDelegation");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getProtocolAccess().getBodyProtocolBodyParserRuleCall_7_0());
				}
				lv_body_18_0=ruleProtocolBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolRule());
					}
					set(
						$current,
						"body",
						lv_body_18_0,
						"br.consiste.SysADL.ProtocolBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_19='}'
		{
			newLeafNode(otherlv_19, grammarAccess.getProtocolAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleConstraintDef
entryRuleConstraintDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintDefRule()); }
	iv_ruleConstraintDef=ruleConstraintDef
	{ $current=$iv_ruleConstraintDef.current; }
	EOF;

// Rule ConstraintDef
ruleConstraintDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConstraintDefAccess().getConstraintDefAction_0(),
					$current);
			}
		)
		otherlv_1='constraint'
		{
			newLeafNode(otherlv_1, grammarAccess.getConstraintDefAccess().getConstraintKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getConstraintDefAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstraintDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getConstraintDefAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConstraintDefAccess().getInParametersPinParserRuleCall_3_1_0());
					}
					lv_inParameters_4_0=rulePin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstraintDefRule());
						}
						add(
							$current,
							"inParameters",
							lv_inParameters_4_0,
							"br.consiste.SysADL.Pin");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getConstraintDefAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConstraintDefAccess().getInParametersPinParserRuleCall_3_2_1_0());
						}
						lv_inParameters_6_0=rulePin
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConstraintDefRule());
							}
							add(
								$current,
								"inParameters",
								lv_inParameters_6_0,
								"br.consiste.SysADL.Pin");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getConstraintDefAccess().getRightParenthesisKeyword_3_3());
			}
		)
		(
			otherlv_8=':'
			{
				newLeafNode(otherlv_8, grammarAccess.getConstraintDefAccess().getColonKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConstraintDefAccess().getOutParametersPinParserRuleCall_4_1_0());
					}
					lv_outParameters_9_0=rulePin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstraintDefRule());
						}
						add(
							$current,
							"outParameters",
							lv_outParameters_9_0,
							"br.consiste.SysADL.Pin");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getConstraintDefAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConstraintDefAccess().getOutParametersPinParserRuleCall_4_2_1_0());
						}
						lv_outParameters_11_0=rulePin
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConstraintDefRule());
							}
							add(
								$current,
								"outParameters",
								lv_outParameters_11_0,
								"br.consiste.SysADL.Pin");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_12='{'
		{
			newLeafNode(otherlv_12, grammarAccess.getConstraintDefAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			otherlv_13='equation'
			{
				newLeafNode(otherlv_13, grammarAccess.getConstraintDefAccess().getEquationKeyword_6_0());
			}
			otherlv_14='='
			{
				newLeafNode(otherlv_14, grammarAccess.getConstraintDefAccess().getEqualsSignKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConstraintDefAccess().getEquationExpressionParserRuleCall_6_2_0());
					}
					lv_equation_15_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstraintDefRule());
						}
						set(
							$current,
							"equation",
							lv_equation_15_0,
							"br.consiste.SysADL.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintDefAccess().getPropertiesPropertyParserRuleCall_7_0());
				}
				lv_properties_16_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintDefRule());
					}
					add(
						$current,
						"properties",
						lv_properties_16_0,
						"br.consiste.SysADL.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getConstraintDefAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleExecutable
entryRuleExecutable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExecutableRule()); }
	iv_ruleExecutable=ruleExecutable
	{ $current=$iv_ruleExecutable.current; }
	EOF;

// Rule Executable
ruleExecutable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='executable'
		{
			newLeafNode(otherlv_0, grammarAccess.getExecutableAccess().getExecutableKeyword_0());
		}
		otherlv_1='def'
		{
			newLeafNode(otherlv_1, grammarAccess.getExecutableAccess().getDefKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getExecutableAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExecutableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getExecutableAccess().getLeftParenthesisKeyword_3());
		}
		(
			otherlv_4='in'
			{
				newLeafNode(otherlv_4, grammarAccess.getExecutableAccess().getInKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExecutableAccess().getParamsTypeUseParserRuleCall_4_1_0());
					}
					lv_params_5_0=ruleTypeUse
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExecutableRule());
						}
						add(
							$current,
							"params",
							lv_params_5_0,
							"br.consiste.SysADL.TypeUse");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getExecutableAccess().getCommaKeyword_4_2_0());
				}
				otherlv_7='in'
				{
					newLeafNode(otherlv_7, grammarAccess.getExecutableAccess().getInKeyword_4_2_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExecutableAccess().getParamsTypeUseParserRuleCall_4_2_2_0());
						}
						lv_params_8_0=ruleTypeUse
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExecutableRule());
							}
							add(
								$current,
								"params",
								lv_params_8_0,
								"br.consiste.SysADL.TypeUse");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getExecutableAccess().getRightParenthesisKeyword_5());
		}
		otherlv_10=':'
		{
			newLeafNode(otherlv_10, grammarAccess.getExecutableAccess().getColonKeyword_6());
		}
		otherlv_11='out'
		{
			newLeafNode(otherlv_11, grammarAccess.getExecutableAccess().getOutKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExecutableRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getExecutableAccess().getReturnTypeTypeDefCrossReference_8_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13='{'
		{
			newLeafNode(otherlv_13, grammarAccess.getExecutableAccess().getLeftCurlyBracketKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExecutableAccess().getBodyNonBlockStatementParserRuleCall_10_0());
				}
				lv_body_14_0=ruleNonBlockStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExecutableRule());
					}
					add(
						$current,
						"body",
						lv_body_14_0,
						"br.consiste.SysADL.NonBlockStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getExecutableAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStatementAccess().getExpressionParserRuleCall_0());
		}
		this_Expression_0=ruleExpression
		{
			$current = $this_Expression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getBlockStatementParserRuleCall_1());
		}
		this_BlockStatement_1=ruleBlockStatement
		{
			$current = $this_BlockStatement_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getVariableDeclParserRuleCall_2());
		}
		this_VariableDecl_2=ruleVariableDecl
		{
			$current = $this_VariableDecl_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_3());
		}
		this_ReturnStatement_3=ruleReturnStatement
		{
			$current = $this_ReturnStatement_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_4());
		}
		this_WhileStatement_4=ruleWhileStatement
		{
			$current = $this_WhileStatement_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getDoStatementParserRuleCall_5());
		}
		this_DoStatement_5=ruleDoStatement
		{
			$current = $this_DoStatement_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getForStatementParserRuleCall_6());
		}
		this_ForStatement_6=ruleForStatement
		{
			$current = $this_ForStatement_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSwitchStatementParserRuleCall_7());
		}
		this_SwitchStatement_7=ruleSwitchStatement
		{
			$current = $this_SwitchStatement_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNonBlockStatement
entryRuleNonBlockStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNonBlockStatementRule()); }
	iv_ruleNonBlockStatement=ruleNonBlockStatement
	{ $current=$iv_ruleNonBlockStatement.current; }
	EOF;

// Rule NonBlockStatement
ruleNonBlockStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNonBlockStatementAccess().getExpressionParserRuleCall_0());
		}
		this_Expression_0=ruleExpression
		{
			$current = $this_Expression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonBlockStatementAccess().getVariableDeclParserRuleCall_1());
		}
		this_VariableDecl_1=ruleVariableDecl
		{
			$current = $this_VariableDecl_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonBlockStatementAccess().getReturnStatementParserRuleCall_2());
		}
		this_ReturnStatement_2=ruleReturnStatement
		{
			$current = $this_ReturnStatement_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonBlockStatementAccess().getWhileStatementParserRuleCall_3());
		}
		this_WhileStatement_3=ruleWhileStatement
		{
			$current = $this_WhileStatement_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonBlockStatementAccess().getDoStatementParserRuleCall_4());
		}
		this_DoStatement_4=ruleDoStatement
		{
			$current = $this_DoStatement_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonBlockStatementAccess().getForStatementParserRuleCall_5());
		}
		this_ForStatement_5=ruleForStatement
		{
			$current = $this_ForStatement_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBlockStatement
entryRuleBlockStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockStatementRule()); }
	iv_ruleBlockStatement=ruleBlockStatement
	{ $current=$iv_ruleBlockStatement.current; }
	EOF;

// Rule BlockStatement
ruleBlockStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBlockStatementAccess().getBlockStatementAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getBlockStatementAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockStatementAccess().getBodyStatementParserRuleCall_2_0());
				}
				lv_body_2_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockStatementRule());
					}
					add(
						$current,
						"body",
						lv_body_2_0,
						"br.consiste.SysADL.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getBlockStatementAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleVariableDecl
entryRuleVariableDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableDeclRule()); }
	iv_ruleVariableDecl=ruleVariableDecl
	{ $current=$iv_ruleVariableDecl.current; }
	EOF;

// Rule VariableDecl
ruleVariableDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='let'
		{
			newLeafNode(otherlv_0, grammarAccess.getVariableDeclAccess().getLetKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVariableDeclAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getVariableDeclAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableDeclRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getVariableDeclAccess().getDefinitionTypeDefCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getVariableDeclAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDeclAccess().getValueExpressionParserRuleCall_5_0());
				}
				lv_value_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDeclRule());
					}
					set(
						$current,
						"value",
						lv_value_5_0,
						"br.consiste.SysADL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIfStatement
entryRuleIfStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStatementRule()); }
	iv_ruleIfStatement=ruleIfStatement
	{ $current=$iv_ruleIfStatement.current; }
	EOF;

// Rule IfStatement
ruleIfStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getConditionExpressionParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"br.consiste.SysADL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getBodyStatementParserRuleCall_4_0());
				}
				lv_body_4_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_4_0,
						"br.consiste.SysADL.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleElseStatement
entryRuleElseStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElseStatementRule()); }
	iv_ruleElseStatement=ruleElseStatement
	{ $current=$iv_ruleElseStatement.current; }
	EOF;

// Rule ElseStatement
ruleElseStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='else'
		{
			newLeafNode(otherlv_0, grammarAccess.getElseStatementAccess().getElseKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getElseStatementAccess().getBodyStatementParserRuleCall_1_0());
				}
				lv_body_1_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_1_0,
						"br.consiste.SysADL.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReturnStatement
entryRuleReturnStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnStatementRule()); }
	iv_ruleReturnStatement=ruleReturnStatement
	{ $current=$iv_ruleReturnStatement.current; }
	EOF;

// Rule ReturnStatement
ruleReturnStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='return'
		{
			newLeafNode(otherlv_0, grammarAccess.getReturnStatementAccess().getReturnKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnStatementAccess().getValueExpressionParserRuleCall_1_0());
				}
				lv_value_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnStatementRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"br.consiste.SysADL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleWhileStatement
entryRuleWhileStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileStatementRule()); }
	iv_ruleWhileStatement=ruleWhileStatement
	{ $current=$iv_ruleWhileStatement.current; }
	EOF;

// Rule WhileStatement
ruleWhileStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='while'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhileStatementAccess().getWhileKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileStatementAccess().getConditionExpressionParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileStatementRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"br.consiste.SysADL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileStatementAccess().getBodyStatementParserRuleCall_4_0());
				}
				lv_body_4_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_4_0,
						"br.consiste.SysADL.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDoStatement
entryRuleDoStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDoStatementRule()); }
	iv_ruleDoStatement=ruleDoStatement
	{ $current=$iv_ruleDoStatement.current; }
	EOF;

// Rule DoStatement
ruleDoStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='do'
		{
			newLeafNode(otherlv_0, grammarAccess.getDoStatementAccess().getDoKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDoStatementAccess().getBodyStatementParserRuleCall_1_0());
				}
				lv_body_1_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_1_0,
						"br.consiste.SysADL.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='while'
		{
			newLeafNode(otherlv_2, grammarAccess.getDoStatementAccess().getWhileKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDoStatementAccess().getConditionExpressionParserRuleCall_4_0());
				}
				lv_condition_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoStatementRule());
					}
					set(
						$current,
						"condition",
						lv_condition_4_0,
						"br.consiste.SysADL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleForStatement
entryRuleForStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForStatementRule()); }
	iv_ruleForStatement=ruleForStatement
	{ $current=$iv_ruleForStatement.current; }
	EOF;

// Rule ForStatement
ruleForStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getForStatementAccess().getForKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getControlForControlParserRuleCall_2_0());
				}
				lv_control_2_0=ruleForControl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"control",
						lv_control_2_0,
						"br.consiste.SysADL.ForControl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getBodyStatementParserRuleCall_4_0());
				}
				lv_body_4_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_4_0,
						"br.consiste.SysADL.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleForControl
entryRuleForControl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForControlRule()); }
	iv_ruleForControl=ruleForControl
	{ $current=$iv_ruleForControl.current; }
	EOF;

// Rule ForControl
ruleForControl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getForControlAccess().getVarsForVarParserRuleCall_0_0());
				}
				lv_vars_0_0=ruleForVar
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForControlRule());
					}
					add(
						$current,
						"vars",
						lv_vars_0_0,
						"br.consiste.SysADL.ForVar");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getForControlAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForControlAccess().getVarsForVarParserRuleCall_1_1_0());
					}
					lv_vars_2_0=ruleForVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForControlRule());
						}
						add(
							$current,
							"vars",
							lv_vars_2_0,
							"br.consiste.SysADL.ForVar");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleForVar
entryRuleForVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForVarRule()); }
	iv_ruleForVar=ruleForVar
	{ $current=$iv_ruleForVar.current; }
	EOF;

// Rule ForVar
ruleForVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	otherlv_0='forvar'
	{
		newLeafNode(otherlv_0, grammarAccess.getForVarAccess().getForvarKeyword());
	}
;

// Entry rule entryRuleSwitchStatement
entryRuleSwitchStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSwitchStatementRule()); }
	iv_ruleSwitchStatement=ruleSwitchStatement
	{ $current=$iv_ruleSwitchStatement.current; }
	EOF;

// Rule SwitchStatement
ruleSwitchStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='switch'
		{
			newLeafNode(otherlv_0, grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchStatementAccess().getExprExpressionParserRuleCall_2_0());
				}
				lv_expr_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
					}
					set(
						$current,
						"expr",
						lv_expr_2_0,
						"br.consiste.SysADL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchStatementAccess().getClausesSwitchClauseParserRuleCall_5_0());
				}
				lv_clauses_5_0=ruleSwitchClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
					}
					add(
						$current,
						"clauses",
						lv_clauses_5_0,
						"br.consiste.SysADL.SwitchClause");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchStatementAccess().getClausesDefaultSwitchClauseParserRuleCall_6_0());
				}
				lv_clauses_6_0=ruleDefaultSwitchClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
					}
					add(
						$current,
						"clauses",
						lv_clauses_6_0,
						"br.consiste.SysADL.DefaultSwitchClause");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleSwitchClause
entryRuleSwitchClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSwitchClauseRule()); }
	iv_ruleSwitchClause=ruleSwitchClause
	{ $current=$iv_ruleSwitchClause.current; }
	EOF;

// Rule SwitchClause
ruleSwitchClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='case'
		{
			newLeafNode(otherlv_0, grammarAccess.getSwitchClauseAccess().getCaseKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchClauseAccess().getValueExpressionParserRuleCall_1_0());
				}
				lv_value_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchClauseRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"br.consiste.SysADL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getSwitchClauseAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchClauseAccess().getBodyStatementParserRuleCall_3_0());
				}
				lv_body_3_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchClauseRule());
					}
					set(
						$current,
						"body",
						lv_body_3_0,
						"br.consiste.SysADL.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDefaultSwitchClause
entryRuleDefaultSwitchClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefaultSwitchClauseRule()); }
	iv_ruleDefaultSwitchClause=ruleDefaultSwitchClause
	{ $current=$iv_ruleDefaultSwitchClause.current; }
	EOF;

// Rule DefaultSwitchClause
ruleDefaultSwitchClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='default'
		{
			newLeafNode(otherlv_0, grammarAccess.getDefaultSwitchClauseAccess().getDefaultKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getDefaultSwitchClauseAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefaultSwitchClauseAccess().getBodyStatementParserRuleCall_2_0());
				}
				lv_body_2_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefaultSwitchClauseRule());
					}
					set(
						$current,
						"body",
						lv_body_2_0,
						"br.consiste.SysADL.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionAccess().getValueEStringParserRuleCall_0_0());
				}
				lv_value_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionRule());
					}
					set(
						$current,
						"value",
						lv_value_0_0,
						"br.consiste.SysADL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getConditionalExpressionParserRuleCall_1());
		}
		this_ConditionalExpression_1=ruleConditionalExpression
		{
			$current = $this_ConditionalExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNameExpression
entryRuleNameExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNameExpressionRule()); }
	iv_ruleNameExpression=ruleNameExpression
	{ $current=$iv_ruleNameExpression.current; }
	EOF;

// Rule NameExpression
ruleNameExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNameExpressionRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getNameExpressionAccess().getCiteNamedElementCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNonNameExpression
entryRuleNonNameExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNonNameExpressionRule()); }
	iv_ruleNonNameExpression=ruleNonNameExpression
	{ $current=$iv_ruleNonNameExpression.current; }
	EOF;

// Rule NonNameExpression
ruleNonNameExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNonNameExpressionAccess().getLiteralExpressionParserRuleCall_0());
		}
		this_LiteralExpression_0=ruleLiteralExpression
		{
			$current = $this_LiteralExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonNameExpressionAccess().getThisExpressionParserRuleCall_1());
		}
		this_ThisExpression_1=ruleThisExpression
		{
			$current = $this_ThisExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNonNameExpressionAccess().getParenthesizedExpressionParserRuleCall_2());
		}
		this_ParenthesizedExpression_2=ruleParenthesizedExpression
		{
			$current = $this_ParenthesizedExpression_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLiteralExpression
entryRuleLiteralExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralExpressionRule()); }
	iv_ruleLiteralExpression=ruleLiteralExpression
	{ $current=$iv_ruleLiteralExpression.current; }
	EOF;

// Rule LiteralExpression
ruleLiteralExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getBooleanLiteralExpressionParserRuleCall_0());
		}
		this_BooleanLiteralExpression_0=ruleBooleanLiteralExpression
		{
			$current = $this_BooleanLiteralExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getNaturalLiteralExpressionParserRuleCall_1());
		}
		this_NaturalLiteralExpression_1=ruleNaturalLiteralExpression
		{
			$current = $this_NaturalLiteralExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getStringLiteralExpressionParserRuleCall_2());
		}
		this_StringLiteralExpression_2=ruleStringLiteralExpression
		{
			$current = $this_StringLiteralExpression_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBooleanLiteralExpression
entryRuleBooleanLiteralExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanLiteralExpressionRule()); }
	iv_ruleBooleanLiteralExpression=ruleBooleanLiteralExpression
	{ $current=$iv_ruleBooleanLiteralExpression.current; }
	EOF;

// Rule BooleanLiteralExpression
ruleBooleanLiteralExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_isTrue_0_0='true'
			{
				newLeafNode(lv_isTrue_0_0, grammarAccess.getBooleanLiteralExpressionAccess().getIsTrueTrueKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBooleanLiteralExpressionRule());
				}
				setWithLastConsumed($current, "isTrue", true, "true");
			}
		)
	)
;

// Entry rule entryRuleNaturalLiteralExpression
entryRuleNaturalLiteralExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNaturalLiteralExpressionRule()); }
	iv_ruleNaturalLiteralExpression=ruleNaturalLiteralExpression
	{ $current=$iv_ruleNaturalLiteralExpression.current; }
	EOF;

// Rule NaturalLiteralExpression
ruleNaturalLiteralExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_int_value_0_0=RULE_INT
			{
				newLeafNode(lv_int_value_0_0, grammarAccess.getNaturalLiteralExpressionAccess().getInt_valueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNaturalLiteralExpressionRule());
				}
				setWithLastConsumed(
					$current,
					"int_value",
					lv_int_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleStringLiteralExpression
entryRuleStringLiteralExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralExpressionRule()); }
	iv_ruleStringLiteralExpression=ruleStringLiteralExpression
	{ $current=$iv_ruleStringLiteralExpression.current; }
	EOF;

// Rule StringLiteralExpression
ruleStringLiteralExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_str_value_0_0=RULE_STRING
			{
				newLeafNode(lv_str_value_0_0, grammarAccess.getStringLiteralExpressionAccess().getStr_valueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringLiteralExpressionRule());
				}
				setWithLastConsumed(
					$current,
					"str_value",
					lv_str_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleThisExpression
entryRuleThisExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThisExpressionRule()); }
	iv_ruleThisExpression=ruleThisExpression
	{ $current=$iv_ruleThisExpression.current; }
	EOF;

// Rule ThisExpression
ruleThisExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getThisExpressionAccess().getThisExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='this'
		{
			newLeafNode(otherlv_1, grammarAccess.getThisExpressionAccess().getThisKeyword_1());
		}
	)
;

// Entry rule entryRuleParenthesizedExpression
entryRuleParenthesizedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParenthesizedExpressionRule()); }
	iv_ruleParenthesizedExpression=ruleParenthesizedExpression
	{ $current=$iv_ruleParenthesizedExpression.current; }
	EOF;

// Rule ParenthesizedExpression
ruleParenthesizedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1());
		}
		this_Expression_1=ruleExpression
		{
			$current = $this_Expression_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); }
	iv_ruleUnaryExpression=ruleUnaryExpression
	{ $current=$iv_ruleUnaryExpression.current; }
	EOF;

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	otherlv_0='unary'
	{
		newLeafNode(otherlv_0, grammarAccess.getUnaryExpressionAccess().getUnaryKeyword());
	}
;

// Entry rule entryRuleConditionalAndOrConditionalOrExpression
entryRuleConditionalAndOrConditionalOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalAndOrConditionalOrExpressionRule()); }
	iv_ruleConditionalAndOrConditionalOrExpression=ruleConditionalAndOrConditionalOrExpression
	{ $current=$iv_ruleConditionalAndOrConditionalOrExpression.current; }
	EOF;

// Rule ConditionalAndOrConditionalOrExpression
ruleConditionalAndOrConditionalOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConditionalAndOrConditionalOrExpressionAccess().getInclusiveOrOrConditionalAndExpressionParserRuleCall_0());
		}
		this_InclusiveOrOrConditionalAndExpression_0=ruleInclusiveOrOrConditionalAndExpression
		{
			$current = $this_InclusiveOrOrConditionalAndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			((
				ruleInclusiveOrOrConditionalAndExpression
			)
			)=>
			{
				newCompositeNode(grammarAccess.getConditionalAndOrConditionalOrExpressionAccess().getConditionalOrExpressionParserRuleCall_1());
			}
			this_ConditionalOrExpression_1=ruleConditionalOrExpression
			{
				$current = $this_ConditionalOrExpression_1.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleInclusiveOrOrConditionalAndExpression
entryRuleInclusiveOrOrConditionalAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInclusiveOrOrConditionalAndExpressionRule()); }
	iv_ruleInclusiveOrOrConditionalAndExpression=ruleInclusiveOrOrConditionalAndExpression
	{ $current=$iv_ruleInclusiveOrOrConditionalAndExpression.current; }
	EOF;

// Rule InclusiveOrOrConditionalAndExpression
ruleInclusiveOrOrConditionalAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInclusiveOrOrConditionalAndExpressionAccess().getExclusiveOrOrInclusiveOrExpressionParserRuleCall_0());
		}
		this_ExclusiveOrOrInclusiveOrExpression_0=ruleExclusiveOrOrInclusiveOrExpression
		{
			$current = $this_ExclusiveOrOrInclusiveOrExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			((
				ruleExclusiveOrOrInclusiveOrExpression
			)
			)=>
			{
				newCompositeNode(grammarAccess.getInclusiveOrOrConditionalAndExpressionAccess().getConditionalAndExpressionParserRuleCall_1());
			}
			this_ConditionalAndExpression_1=ruleConditionalAndExpression
			{
				$current = $this_ConditionalAndExpression_1.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleExclusiveOrOrInclusiveOrExpression
entryRuleExclusiveOrOrInclusiveOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExclusiveOrOrInclusiveOrExpressionRule()); }
	iv_ruleExclusiveOrOrInclusiveOrExpression=ruleExclusiveOrOrInclusiveOrExpression
	{ $current=$iv_ruleExclusiveOrOrInclusiveOrExpression.current; }
	EOF;

// Rule ExclusiveOrOrInclusiveOrExpression
ruleExclusiveOrOrInclusiveOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExclusiveOrOrInclusiveOrExpressionAccess().getAndOrExclusiveOrExpressionParserRuleCall_0());
		}
		this_AndOrExclusiveOrExpression_0=ruleAndOrExclusiveOrExpression
		{
			$current = $this_AndOrExclusiveOrExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			((
				ruleAndOrExclusiveOrExpression
			)
			)=>
			{
				newCompositeNode(grammarAccess.getExclusiveOrOrInclusiveOrExpressionAccess().getInclusiveOrExpressionParserRuleCall_1());
			}
			this_InclusiveOrExpression_1=ruleInclusiveOrExpression
			{
				$current = $this_InclusiveOrExpression_1.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleAndOrExclusiveOrExpression
entryRuleAndOrExclusiveOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndOrExclusiveOrExpressionRule()); }
	iv_ruleAndOrExclusiveOrExpression=ruleAndOrExclusiveOrExpression
	{ $current=$iv_ruleAndOrExclusiveOrExpression.current; }
	EOF;

// Rule AndOrExclusiveOrExpression
ruleAndOrExclusiveOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndOrExclusiveOrExpressionAccess().getEqualityOrAndExpressionParserRuleCall_0());
		}
		this_EqualityOrAndExpression_0=ruleEqualityOrAndExpression
		{
			$current = $this_EqualityOrAndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			((
				ruleEqualityOrAndExpression
			)
			)=>
			{
				newCompositeNode(grammarAccess.getAndOrExclusiveOrExpressionAccess().getExclusiveOrExpressionParserRuleCall_1());
			}
			this_ExclusiveOrExpression_1=ruleExclusiveOrExpression
			{
				$current = $this_ExclusiveOrExpression_1.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEqualityOrAndExpression
entryRuleEqualityOrAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityOrAndExpressionRule()); }
	iv_ruleEqualityOrAndExpression=ruleEqualityOrAndExpression
	{ $current=$iv_ruleEqualityOrAndExpression.current; }
	EOF;

// Rule EqualityOrAndExpression
ruleEqualityOrAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualityOrAndExpressionAccess().getClassificationOrEqualityExpressionParserRuleCall_0());
		}
		this_ClassificationOrEqualityExpression_0=ruleClassificationOrEqualityExpression
		{
			$current = $this_ClassificationOrEqualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			((
				ruleClassificationOrEqualityExpression
			)
			)=>
			{
				newCompositeNode(grammarAccess.getEqualityOrAndExpressionAccess().getAndExpressionParserRuleCall_1());
			}
			this_AndExpression_1=ruleAndExpression
			{
				$current = $this_AndExpression_1.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleClassificationOrEqualityExpression
entryRuleClassificationOrEqualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassificationOrEqualityExpressionRule()); }
	iv_ruleClassificationOrEqualityExpression=ruleClassificationOrEqualityExpression
	{ $current=$iv_ruleClassificationOrEqualityExpression.current; }
	EOF;

// Rule ClassificationOrEqualityExpression
ruleClassificationOrEqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getClassificationOrEqualityExpressionAccess().getRelationalOrClassificationExpressionParserRuleCall_0());
		}
		this_RelationalOrClassificationExpression_0=ruleRelationalOrClassificationExpression
		{
			$current = $this_RelationalOrClassificationExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			((
				ruleRelationalOrClassificationExpression
			)
			)=>
			{
				newCompositeNode(grammarAccess.getClassificationOrEqualityExpressionAccess().getEqualityExpressionParserRuleCall_1());
			}
			this_EqualityExpression_1=ruleEqualityExpression
			{
				$current = $this_EqualityExpression_1.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleRelationalOrClassificationExpression
entryRuleRelationalOrClassificationExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationalOrClassificationExpressionRule()); }
	iv_ruleRelationalOrClassificationExpression=ruleRelationalOrClassificationExpression
	{ $current=$iv_ruleRelationalOrClassificationExpression.current; }
	EOF;

// Rule RelationalOrClassificationExpression
ruleRelationalOrClassificationExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelationalOrClassificationExpressionAccess().getArithmeticOrRelationalExpressionParserRuleCall_0());
		}
		this_ArithmeticOrRelationalExpression_0=ruleArithmeticOrRelationalExpression
		{
			$current = $this_ArithmeticOrRelationalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			((
				ruleArithmeticOrRelationalExpression
			)
			)=>
			{
				newCompositeNode(grammarAccess.getRelationalOrClassificationExpressionAccess().getClassificationExpressionParserRuleCall_1());
			}
			this_ClassificationExpression_1=ruleClassificationExpression
			{
				$current = $this_ClassificationExpression_1.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleArithmeticOrRelationalExpression
entryRuleArithmeticOrRelationalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticOrRelationalExpressionRule()); }
	iv_ruleArithmeticOrRelationalExpression=ruleArithmeticOrRelationalExpression
	{ $current=$iv_ruleArithmeticOrRelationalExpression.current; }
	EOF;

// Rule ArithmeticOrRelationalExpression
ruleArithmeticOrRelationalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getArithmeticOrRelationalExpressionAccess().getUnaryOrArithmeticExpressionParserRuleCall_0());
		}
		this_UnaryOrArithmeticExpression_0=ruleUnaryOrArithmeticExpression
		{
			$current = $this_UnaryOrArithmeticExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			((
				ruleArithmeticOrShiftExpression
			)
			)=>
			{
				newCompositeNode(grammarAccess.getArithmeticOrRelationalExpressionAccess().getRelationalExpressionParserRuleCall_1());
			}
			this_RelationalExpression_1=ruleRelationalExpression
			{
				$current = $this_RelationalExpression_1.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleUnaryOrArithmeticExpression
entryRuleUnaryOrArithmeticExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryOrArithmeticExpressionRule()); }
	iv_ruleUnaryOrArithmeticExpression=ruleUnaryOrArithmeticExpression
	{ $current=$iv_ruleUnaryOrArithmeticExpression.current; }
	EOF;

// Rule UnaryOrArithmeticExpression
ruleUnaryOrArithmeticExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnaryOrArithmeticExpressionAccess().getUnaryOrMultiplicativeExpressionParserRuleCall_0());
		}
		this_UnaryOrMultiplicativeExpression_0=ruleUnaryOrMultiplicativeExpression
		{
			$current = $this_UnaryOrMultiplicativeExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			((
				ruleUnaryOrMultiplicativeExpression
			)
			)=>
			{
				newCompositeNode(grammarAccess.getUnaryOrArithmeticExpressionAccess().getAdditiveExpressionParserRuleCall_1());
			}
			this_AdditiveExpression_1=ruleAdditiveExpression
			{
				$current = $this_AdditiveExpression_1.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleUnaryOrMultiplicativeExpression
entryRuleUnaryOrMultiplicativeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryOrMultiplicativeExpressionRule()); }
	iv_ruleUnaryOrMultiplicativeExpression=ruleUnaryOrMultiplicativeExpression
	{ $current=$iv_ruleUnaryOrMultiplicativeExpression.current; }
	EOF;

// Rule UnaryOrMultiplicativeExpression
ruleUnaryOrMultiplicativeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnaryOrMultiplicativeExpressionAccess().getUnaryExpressionParserRuleCall_0());
		}
		this_UnaryExpression_0=ruleUnaryExpression
		{
			$current = $this_UnaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnaryOrMultiplicativeExpressionAccess().getMultiplicativeExpressionParserRuleCall_1());
		}
		this_MultiplicativeExpression_1=ruleMultiplicativeExpression
		{
			$current = $this_MultiplicativeExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); }
	iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression
	{ $current=$iv_ruleMultiplicativeExpression.current; }
	EOF;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOp1UnaryExpressionParserRuleCall_0_0());
				}
				lv_op1_0_0=ruleUnaryExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
					}
					set(
						$current,
						"op1",
						lv_op1_0_0,
						"br.consiste.SysADL.UnaryExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_operator_1_1='*'
					{
						newLeafNode(lv_operator_1_1, grammarAccess.getMultiplicativeExpressionAccess().getOperatorAsteriskKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_1, null);
					}
					    |
					lv_operator_1_2='/'
					{
						newLeafNode(lv_operator_1_2, grammarAccess.getMultiplicativeExpressionAccess().getOperatorSolidusKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_2, null);
					}
					    |
					lv_operator_1_3='%'
					{
						newLeafNode(lv_operator_1_3, grammarAccess.getMultiplicativeExpressionAccess().getOperatorPercentSignKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_3, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOp2UnaryOrMultiplicativeExpressionParserRuleCall_2_0());
				}
				lv_op2_2_0=ruleUnaryOrMultiplicativeExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
					}
					set(
						$current,
						"op2",
						lv_op2_2_0,
						"br.consiste.SysADL.UnaryOrMultiplicativeExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditiveExpressionRule()); }
	iv_ruleAdditiveExpression=ruleAdditiveExpression
	{ $current=$iv_ruleAdditiveExpression.current; }
	EOF;

// Rule AdditiveExpression
ruleAdditiveExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				ruleUnaryOrMultiplicativeExpression
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOp1UnaryOrMultiplicativeExpressionParserRuleCall_0_0());
				}
				lv_op1_0_0=ruleUnaryOrMultiplicativeExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
					}
					set(
						$current,
						"op1",
						lv_op1_0_0,
						"br.consiste.SysADL.UnaryOrMultiplicativeExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_operator_1_1='+'
					{
						newLeafNode(lv_operator_1_1, grammarAccess.getAdditiveExpressionAccess().getOperatorPlusSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAdditiveExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_1, null);
					}
					    |
					lv_operator_1_2='-'
					{
						newLeafNode(lv_operator_1_2, grammarAccess.getAdditiveExpressionAccess().getOperatorHyphenMinusKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAdditiveExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOp2UnaryOrArithmeticExpressionParserRuleCall_2_0());
				}
				lv_op2_2_0=ruleUnaryOrArithmeticExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
					}
					set(
						$current,
						"op2",
						lv_op2_2_0,
						"br.consiste.SysADL.UnaryOrArithmeticExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationalExpressionRule()); }
	iv_ruleRelationalExpression=ruleRelationalExpression
	{ $current=$iv_ruleRelationalExpression.current; }
	EOF;

// Rule RelationalExpression
ruleRelationalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				ruleArithmeticOrShiftExpression
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOp1ArithmeticOrShiftExpressionParserRuleCall_0_0());
				}
				lv_op1_0_0=ruleArithmeticOrShiftExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
					}
					set(
						$current,
						"op1",
						lv_op1_0_0,
						"br.consiste.SysADL.ArithmeticOrShiftExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_operator_1_1='<'
					{
						newLeafNode(lv_operator_1_1, grammarAccess.getRelationalExpressionAccess().getOperatorLessThanSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRelationalExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_1, null);
					}
					    |
					lv_operator_1_2='>'
					{
						newLeafNode(lv_operator_1_2, grammarAccess.getRelationalExpressionAccess().getOperatorGreaterThanSignKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRelationalExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_2, null);
					}
					    |
					lv_operator_1_3='<='
					{
						newLeafNode(lv_operator_1_3, grammarAccess.getRelationalExpressionAccess().getOperatorLessThanSignEqualsSignKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRelationalExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_3, null);
					}
					    |
					lv_operator_1_4='>='
					{
						newLeafNode(lv_operator_1_4, grammarAccess.getRelationalExpressionAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRelationalExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_4, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOp2ArithmeticOrShiftExpressionParserRuleCall_2_0());
				}
				lv_op2_2_0=ruleArithmeticOrShiftExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
					}
					set(
						$current,
						"op2",
						lv_op2_2_0,
						"br.consiste.SysADL.ArithmeticOrShiftExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleArithmeticOrShiftExpression
entryRuleArithmeticOrShiftExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticOrShiftExpressionRule()); }
	iv_ruleArithmeticOrShiftExpression=ruleArithmeticOrShiftExpression
	{ $current=$iv_ruleArithmeticOrShiftExpression.current; }
	EOF;

// Rule ArithmeticOrShiftExpression
ruleArithmeticOrShiftExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getArithmeticOrShiftExpressionAccess().getUnaryOrArithmeticExpressionParserRuleCall_0());
		}
		this_UnaryOrArithmeticExpression_0=ruleUnaryOrArithmeticExpression
		{
			$current = $this_UnaryOrArithmeticExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			((
				ruleUnaryOrArithmeticExpression
			)
			)=>
			{
				newCompositeNode(grammarAccess.getArithmeticOrShiftExpressionAccess().getShiftExpressionParserRuleCall_1());
			}
			this_ShiftExpression_1=ruleShiftExpression
			{
				$current = $this_ShiftExpression_1.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleShiftExpression
entryRuleShiftExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShiftExpressionRule()); }
	iv_ruleShiftExpression=ruleShiftExpression
	{ $current=$iv_ruleShiftExpression.current; }
	EOF;

// Rule ShiftExpression
ruleShiftExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				ruleUnaryOrArithmeticExpression
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getShiftExpressionAccess().getOp1UnaryOrArithmeticExpressionParserRuleCall_0_0());
				}
				lv_op1_0_0=ruleUnaryOrArithmeticExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
					}
					set(
						$current,
						"op1",
						lv_op1_0_0,
						"br.consiste.SysADL.UnaryOrArithmeticExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_operator_1_1='<<'
					{
						newLeafNode(lv_operator_1_1, grammarAccess.getShiftExpressionAccess().getOperatorLessThanSignLessThanSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShiftExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_1, null);
					}
					    |
					lv_operator_1_2='>>'
					{
						newLeafNode(lv_operator_1_2, grammarAccess.getShiftExpressionAccess().getOperatorGreaterThanSignGreaterThanSignKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShiftExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_2, null);
					}
					    |
					lv_operator_1_3='>>>'
					{
						newLeafNode(lv_operator_1_3, grammarAccess.getShiftExpressionAccess().getOperatorGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShiftExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_3, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getShiftExpressionAccess().getOp2ArithmeticOrShiftExpressionParserRuleCall_2_0());
				}
				lv_op2_2_0=ruleArithmeticOrShiftExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
					}
					set(
						$current,
						"op2",
						lv_op2_2_0,
						"br.consiste.SysADL.ArithmeticOrShiftExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleClassificationExpression
entryRuleClassificationExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassificationExpressionRule()); }
	iv_ruleClassificationExpression=ruleClassificationExpression
	{ $current=$iv_ruleClassificationExpression.current; }
	EOF;

// Rule ClassificationExpression
ruleClassificationExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				ruleArithmeticOrRelationalExpression
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOpArithmeticOrRelationalExpressionParserRuleCall_0_0());
				}
				lv_op_0_0=ruleArithmeticOrRelationalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
					}
					set(
						$current,
						"op",
						lv_op_0_0,
						"br.consiste.SysADL.ArithmeticOrRelationalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_operator_1_1='instanceof'
					{
						newLeafNode(lv_operator_1_1, grammarAccess.getClassificationExpressionAccess().getOperatorInstanceofKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassificationExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_1, null);
					}
					    |
					lv_operator_1_2='hastype'
					{
						newLeafNode(lv_operator_1_2, grammarAccess.getClassificationExpressionAccess().getOperatorHastypeKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassificationExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_2, null);
					}
				)
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassificationExpressionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getClassificationExpressionAccess().getTypeNameTypeDefCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityExpressionRule()); }
	iv_ruleEqualityExpression=ruleEqualityExpression
	{ $current=$iv_ruleEqualityExpression.current; }
	EOF;

// Rule EqualityExpression
ruleEqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				ruleRelationalOrClassificationExpression
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOp1RelationalOrClassificationExpressionParserRuleCall_0_0());
				}
				lv_op1_0_0=ruleRelationalOrClassificationExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
					}
					set(
						$current,
						"op1",
						lv_op1_0_0,
						"br.consiste.SysADL.RelationalOrClassificationExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_operator_1_1='='
					{
						newLeafNode(lv_operator_1_1, grammarAccess.getEqualityExpressionAccess().getOperatorEqualsSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEqualityExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_1, null);
					}
					    |
					lv_operator_1_2='!='
					{
						newLeafNode(lv_operator_1_2, grammarAccess.getEqualityExpressionAccess().getOperatorExclamationMarkEqualsSignKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEqualityExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOp2ClassificationOrEqualityExpressionParserRuleCall_2_0());
				}
				lv_op2_2_0=ruleClassificationOrEqualityExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
					}
					set(
						$current,
						"op2",
						lv_op2_2_0,
						"br.consiste.SysADL.ClassificationOrEqualityExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	iv_ruleAndExpression=ruleAndExpression
	{ $current=$iv_ruleAndExpression.current; }
	EOF;

// Rule AndExpression
ruleAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				ruleClassificationOrEqualityExpression
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getAndExpressionAccess().getOp1ClassificationOrEqualityExpressionParserRuleCall_0_0());
				}
				lv_op1_0_0=ruleClassificationOrEqualityExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
					}
					set(
						$current,
						"op1",
						lv_op1_0_0,
						"br.consiste.SysADL.ClassificationOrEqualityExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_operator_1_0='&'
				{
					newLeafNode(lv_operator_1_0, grammarAccess.getAndExpressionAccess().getOperatorAmpersandKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAndExpressionRule());
					}
					setWithLastConsumed($current, "operator", lv_operator_1_0, "&");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAndExpressionAccess().getOp2EqualityOrAndExpressionParserRuleCall_2_0());
				}
				lv_op2_2_0=ruleEqualityOrAndExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
					}
					set(
						$current,
						"op2",
						lv_op2_2_0,
						"br.consiste.SysADL.EqualityOrAndExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExclusiveOrExpression
entryRuleExclusiveOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExclusiveOrExpressionRule()); }
	iv_ruleExclusiveOrExpression=ruleExclusiveOrExpression
	{ $current=$iv_ruleExclusiveOrExpression.current; }
	EOF;

// Rule ExclusiveOrExpression
ruleExclusiveOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				ruleEqualityOrAndExpression
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getExclusiveOrExpressionAccess().getOp1EqualityOrAndExpressionParserRuleCall_0_0());
				}
				lv_op1_0_0=ruleEqualityOrAndExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExclusiveOrExpressionRule());
					}
					set(
						$current,
						"op1",
						lv_op1_0_0,
						"br.consiste.SysADL.EqualityOrAndExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_operator_1_0='^'
				{
					newLeafNode(lv_operator_1_0, grammarAccess.getExclusiveOrExpressionAccess().getOperatorCircumflexAccentKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExclusiveOrExpressionRule());
					}
					setWithLastConsumed($current, "operator", lv_operator_1_0, "^");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExclusiveOrExpressionAccess().getOp2AndOrExclusiveOrExpressionParserRuleCall_2_0());
				}
				lv_op2_2_0=ruleAndOrExclusiveOrExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExclusiveOrExpressionRule());
					}
					set(
						$current,
						"op2",
						lv_op2_2_0,
						"br.consiste.SysADL.AndOrExclusiveOrExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInclusiveOrExpression
entryRuleInclusiveOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInclusiveOrExpressionRule()); }
	iv_ruleInclusiveOrExpression=ruleInclusiveOrExpression
	{ $current=$iv_ruleInclusiveOrExpression.current; }
	EOF;

// Rule InclusiveOrExpression
ruleInclusiveOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				ruleAndOrExclusiveOrExpression
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getInclusiveOrExpressionAccess().getOp1AndOrExclusiveOrExpressionParserRuleCall_0_0());
				}
				lv_op1_0_0=ruleAndOrExclusiveOrExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInclusiveOrExpressionRule());
					}
					set(
						$current,
						"op1",
						lv_op1_0_0,
						"br.consiste.SysADL.AndOrExclusiveOrExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_operator_1_0='|'
				{
					newLeafNode(lv_operator_1_0, grammarAccess.getInclusiveOrExpressionAccess().getOperatorVerticalLineKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInclusiveOrExpressionRule());
					}
					setWithLastConsumed($current, "operator", lv_operator_1_0, "|");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInclusiveOrExpressionAccess().getOp2ExclusiveOrOrInclusiveOrExpressionParserRuleCall_2_0());
				}
				lv_op2_2_0=ruleExclusiveOrOrInclusiveOrExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInclusiveOrExpressionRule());
					}
					set(
						$current,
						"op2",
						lv_op2_2_0,
						"br.consiste.SysADL.ExclusiveOrOrInclusiveOrExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConditionalAndExpression
entryRuleConditionalAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalAndExpressionRule()); }
	iv_ruleConditionalAndExpression=ruleConditionalAndExpression
	{ $current=$iv_ruleConditionalAndExpression.current; }
	EOF;

// Rule ConditionalAndExpression
ruleConditionalAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				ruleExclusiveOrOrInclusiveOrExpression
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getConditionalAndExpressionAccess().getOp1ExclusiveOrOrInclusiveOrExpressionParserRuleCall_0_0());
				}
				lv_op1_0_0=ruleExclusiveOrOrInclusiveOrExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalAndExpressionRule());
					}
					set(
						$current,
						"op1",
						lv_op1_0_0,
						"br.consiste.SysADL.ExclusiveOrOrInclusiveOrExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_operator_1_0='&&'
				{
					newLeafNode(lv_operator_1_0, grammarAccess.getConditionalAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionalAndExpressionRule());
					}
					setWithLastConsumed($current, "operator", lv_operator_1_0, "&&");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalAndExpressionAccess().getOp2InclusiveOrOrConditionalAndExpressionParserRuleCall_2_0());
				}
				lv_op2_2_0=ruleInclusiveOrOrConditionalAndExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalAndExpressionRule());
					}
					set(
						$current,
						"op2",
						lv_op2_2_0,
						"br.consiste.SysADL.InclusiveOrOrConditionalAndExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConditionalOrExpression
entryRuleConditionalOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalOrExpressionRule()); }
	iv_ruleConditionalOrExpression=ruleConditionalOrExpression
	{ $current=$iv_ruleConditionalOrExpression.current; }
	EOF;

// Rule ConditionalOrExpression
ruleConditionalOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				ruleInclusiveOrOrConditionalAndExpression
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getConditionalOrExpressionAccess().getOp1InclusiveOrOrConditionalAndExpressionParserRuleCall_0_0());
				}
				lv_op1_0_0=ruleInclusiveOrOrConditionalAndExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalOrExpressionRule());
					}
					set(
						$current,
						"op1",
						lv_op1_0_0,
						"br.consiste.SysADL.InclusiveOrOrConditionalAndExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_operator_1_0='||'
				{
					newLeafNode(lv_operator_1_0, grammarAccess.getConditionalOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionalOrExpressionRule());
					}
					setWithLastConsumed($current, "operator", lv_operator_1_0, "||");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalOrExpressionAccess().getOp2ConditionalAndOrConditionalOrExpressionParserRuleCall_2_0());
				}
				lv_op2_2_0=ruleConditionalAndOrConditionalOrExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalOrExpressionRule());
					}
					set(
						$current,
						"op2",
						lv_op2_2_0,
						"br.consiste.SysADL.ConditionalAndOrConditionalOrExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalExpressionRule()); }
	iv_ruleConditionalExpression=ruleConditionalExpression
	{ $current=$iv_ruleConditionalExpression.current; }
	EOF;

// Rule ConditionalExpression
ruleConditionalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConditionalExpressionAccess().getConditionalAndOrConditionalOrExpressionParserRuleCall_0());
		}
		this_ConditionalAndOrConditionalOrExpression_0=ruleConditionalAndOrConditionalOrExpression
		{
			$current = $this_ConditionalAndOrConditionalOrExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			((
				ruleConditionalAndOrConditionalOrExpression
			)
			)=>
			{
				newCompositeNode(grammarAccess.getConditionalExpressionAccess().getConditionalTestExpressionParserRuleCall_1());
			}
			this_ConditionalTestExpression_1=ruleConditionalTestExpression
			{
				$current = $this_ConditionalTestExpression_1.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleConditionalTestExpression
entryRuleConditionalTestExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalTestExpressionRule()); }
	iv_ruleConditionalTestExpression=ruleConditionalTestExpression
	{ $current=$iv_ruleConditionalTestExpression.current; }
	EOF;

// Rule ConditionalTestExpression
ruleConditionalTestExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				ruleConditionalAndOrConditionalOrExpression
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getConditionalTestExpressionAccess().getOp1ConditionalAndOrConditionalOrExpressionParserRuleCall_0_0());
				}
				lv_op1_0_0=ruleConditionalAndOrConditionalOrExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalTestExpressionRule());
					}
					set(
						$current,
						"op1",
						lv_op1_0_0,
						"br.consiste.SysADL.ConditionalAndOrConditionalOrExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='?'
		{
			newLeafNode(otherlv_1, grammarAccess.getConditionalTestExpressionAccess().getQuestionMarkKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalTestExpressionAccess().getOp2ExpressionParserRuleCall_2_0());
				}
				lv_op2_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalTestExpressionRule());
					}
					set(
						$current,
						"op2",
						lv_op2_2_0,
						"br.consiste.SysADL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getConditionalTestExpressionAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalTestExpressionAccess().getOp3ConditionalExpressionParserRuleCall_4_0());
				}
				lv_op3_4_0=ruleConditionalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalTestExpressionRule());
					}
					set(
						$current,
						"op3",
						lv_op3_4_0,
						"br.consiste.SysADL.ConditionalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameAccess().getColonQualifiedNameParserRuleCall_0());
		}
		this_ColonQualifiedName_0=ruleColonQualifiedName
		{
			$current.merge(this_ColonQualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQualifiedNameAccess().getDotQualifiedNameParserRuleCall_1());
		}
		this_DotQualifiedName_1=ruleDotQualifiedName
		{
			$current.merge(this_DotQualifiedName_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_ID_2=RULE_ID
		{
			$current.merge(this_ID_2);
		}
		{
			newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleColonQualifiedName
entryRuleColonQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getColonQualifiedNameRule()); }
	iv_ruleColonQualifiedName=ruleColonQualifiedName
	{ $current=$iv_ruleColonQualifiedName.current.getText(); }
	EOF;

// Rule ColonQualifiedName
ruleColonQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getColonQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		kw='::'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getColonQualifiedNameAccess().getColonColonKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getColonQualifiedNameAccess().getQualifiedNameParserRuleCall_2());
		}
		this_QualifiedName_2=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDotQualifiedName
entryRuleDotQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDotQualifiedNameRule()); }
	iv_ruleDotQualifiedName=ruleDotQualifiedName
	{ $current=$iv_ruleDotQualifiedName.current.getText(); }
	EOF;

// Rule DotQualifiedName
ruleDotQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getDotQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getDotQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getDotQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)+
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleConfiguration
entryRuleConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigurationRule()); }
	iv_ruleConfiguration=ruleConfiguration
	{ $current=$iv_ruleConfiguration.current; }
	EOF;

// Rule Configuration
ruleConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConfigurationAccess().getConfigurationAction_0(),
					$current);
			}
		)
		otherlv_1='configuration'
		{
			newLeafNode(otherlv_1, grammarAccess.getConfigurationAccess().getConfigurationKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getConfigurationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='components'
			{
				newLeafNode(otherlv_3, grammarAccess.getConfigurationAccess().getComponentsKeyword_3_0());
			}
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getConfigurationAccess().getColonKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigurationAccess().getComponentsComponentUseParserRuleCall_3_2_0());
					}
					lv_components_5_0=ruleComponentUse
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigurationRule());
						}
						add(
							$current,
							"components",
							lv_components_5_0,
							"br.consiste.SysADL.ComponentUse");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_6='connectors'
			{
				newLeafNode(otherlv_6, grammarAccess.getConfigurationAccess().getConnectorsKeyword_4_0());
			}
			otherlv_7=':'
			{
				newLeafNode(otherlv_7, grammarAccess.getConfigurationAccess().getColonKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigurationAccess().getConnectorsConnectorUseParserRuleCall_4_2_0());
					}
					lv_connectors_8_0=ruleConnectorUse
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigurationRule());
						}
						add(
							$current,
							"connectors",
							lv_connectors_8_0,
							"br.consiste.SysADL.ConnectorUse");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_9='delegations'
			{
				newLeafNode(otherlv_9, grammarAccess.getConfigurationAccess().getDelegationsKeyword_5_0());
			}
			otherlv_10=':'
			{
				newLeafNode(otherlv_10, grammarAccess.getConfigurationAccess().getColonKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigurationAccess().getDelegationsDelegationParserRuleCall_5_2_0());
					}
					lv_delegations_11_0=ruleDelegation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigurationRule());
						}
						add(
							$current,
							"delegations",
							lv_delegations_11_0,
							"br.consiste.SysADL.Delegation");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getConfigurationAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDelegation
entryRuleDelegation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDelegationRule()); }
	iv_ruleDelegation=ruleDelegation
	{ $current=$iv_ruleDelegation.current; }
	EOF;

// Rule Delegation
ruleDelegation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDelegationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDelegationAccess().getFullPortPortUseCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='to'
		{
			newLeafNode(otherlv_1, grammarAccess.getDelegationAccess().getToKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDelegationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDelegationAccess().getPortProxyPortUseCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFlow
entryRuleFlow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFlowRule()); }
	iv_ruleFlow=ruleFlow
	{ $current=$iv_ruleFlow.current; }
	EOF;

// Rule Flow
ruleFlow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlowRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFlowAccess().getFlowTypeTypeDefCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='from'
		{
			newLeafNode(otherlv_1, grammarAccess.getFlowAccess().getFromKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlowRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFlowAccess().getSourcePortUseCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='to'
		{
			newLeafNode(otherlv_3, grammarAccess.getFlowAccess().getToKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlowRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFlowAccess().getDestinationPortUseCrossReference_4_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConnectorBinding
entryRuleConnectorBinding returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectorBindingRule()); }
	iv_ruleConnectorBinding=ruleConnectorBinding
	{ $current=$iv_ruleConnectorBinding.current; }
	EOF;

// Rule ConnectorBinding
ruleConnectorBinding returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectorBindingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getConnectorBindingAccess().getFirstPortPortUseCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getConnectorBindingAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectorBindingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getConnectorBindingAccess().getSecondPortPortUseCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConstraintUse
entryRuleConstraintUse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintUseRule()); }
	iv_ruleConstraintUse=ruleConstraintUse
	{ $current=$iv_ruleConstraintUse.current; }
	EOF;

// Rule ConstraintUse
ruleConstraintUse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConstraintUseAccess().getConstraintUseAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintUseAccess().getKindConstraintKindEnumRuleCall_1_0());
				}
				lv_kind_1_0=ruleConstraintKind
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintUseRule());
					}
					set(
						$current,
						"kind",
						lv_kind_1_0,
						"br.consiste.SysADL.ConstraintKind");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstraintUseRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getConstraintUseAccess().getDefinitionConstraintDefCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getConstraintUseAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConstraintUseRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getConstraintUseAccess().getParamsTypeUseCrossReference_4_0_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getConstraintUseAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConstraintUseRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getConstraintUseAccess().getParamsTypeUseCrossReference_4_1_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getConstraintUseAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleActivityDelegation
entryRuleActivityDelegation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActivityDelegationRule()); }
	iv_ruleActivityDelegation=ruleActivityDelegation
	{ $current=$iv_ruleActivityDelegation.current; }
	EOF;

// Rule ActivityDelegation
ruleActivityDelegation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='delegate'
		{
			newLeafNode(otherlv_0, grammarAccess.getActivityDelegationAccess().getDelegateKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActivityDelegationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getActivityDelegationAccess().getSourceActivityFlowableCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='to'
		{
			newLeafNode(otherlv_2, grammarAccess.getActivityDelegationAccess().getToKeyword_2());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActivityDelegationRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getActivityDelegationAccess().getTargetActivityFlowableCrossReference_3_0_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityDelegationAccess().getTargetSwitchActivitySwitchParserRuleCall_3_1_0());
					}
					lv_targetSwitch_4_0=ruleActivitySwitch
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityDelegationRule());
						}
						set(
							$current,
							"targetSwitch",
							lv_targetSwitch_4_0,
							"br.consiste.SysADL.ActivitySwitch");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleActivitySwitch
entryRuleActivitySwitch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActivitySwitchRule()); }
	iv_ruleActivitySwitch=ruleActivitySwitch
	{ $current=$iv_ruleActivitySwitch.current; }
	EOF;

// Rule ActivitySwitch
ruleActivitySwitch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getActivitySwitchAccess().getActivitySwitchAction_0(),
					$current);
			}
		)
		otherlv_1='switch'
		{
			newLeafNode(otherlv_1, grammarAccess.getActivitySwitchAccess().getSwitchKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getActivitySwitchAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getActivitySwitchAccess().getCasesActivitySwitchCaseParserRuleCall_3_0_0());
					}
					lv_cases_3_0=ruleActivitySwitchCase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivitySwitchRule());
						}
						add(
							$current,
							"cases",
							lv_cases_3_0,
							"br.consiste.SysADL.ActivitySwitchCase");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getActivitySwitchAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActivitySwitchAccess().getCasesActivitySwitchCaseParserRuleCall_3_1_1_0());
						}
						lv_cases_5_0=ruleActivitySwitchCase
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActivitySwitchRule());
							}
							add(
								$current,
								"cases",
								lv_cases_5_0,
								"br.consiste.SysADL.ActivitySwitchCase");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getActivitySwitchAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleActivitySwitchCase
entryRuleActivitySwitchCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActivitySwitchCaseRule()); }
	iv_ruleActivitySwitchCase=ruleActivitySwitchCase
	{ $current=$iv_ruleActivitySwitchCase.current; }
	EOF;

// Rule ActivitySwitchCase
ruleActivitySwitchCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getActivitySwitchCaseAccess().getActivitySwitchCaseAction_0(),
					$current);
			}
		)
		otherlv_1='case'
		{
			newLeafNode(otherlv_1, grammarAccess.getActivitySwitchCaseAccess().getCaseKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActivitySwitchCaseAccess().getConditionExpressionParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActivitySwitchCaseRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"br.consiste.SysADL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getActivitySwitchCaseAccess().getColonKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActivitySwitchCaseRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getActivitySwitchCaseAccess().getTargetActivityFlowableCrossReference_4_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleActivityBody
entryRuleActivityBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActivityBodyRule()); }
	iv_ruleActivityBody=ruleActivityBody
	{ $current=$iv_ruleActivityBody.current; }
	EOF;

// Rule ActivityBody
ruleActivityBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getActivityBodyAccess().getActivityBodyAction_0(),
					$current);
			}
		)
		otherlv_1='body'
		{
			newLeafNode(otherlv_1, grammarAccess.getActivityBodyAccess().getBodyKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getActivityBodyAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='actions'
			{
				newLeafNode(otherlv_3, grammarAccess.getActivityBodyAccess().getActionsKeyword_3_0());
			}
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getActivityBodyAccess().getColonKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityBodyAccess().getActionsActionUseParserRuleCall_3_2_0());
					}
					lv_actions_5_0=ruleActionUse
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityBodyRule());
						}
						add(
							$current,
							"actions",
							lv_actions_5_0,
							"br.consiste.SysADL.ActionUse");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getActivityBodyAccess().getFlowsActivityRelationParserRuleCall_4_0());
				}
				lv_flows_6_0=ruleActivityRelation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActivityBodyRule());
					}
					add(
						$current,
						"flows",
						lv_flows_6_0,
						"br.consiste.SysADL.ActivityRelation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getActivityBodyAccess().getDataObjectsDataObjectParserRuleCall_5_0());
				}
				lv_dataObjects_7_0=ruleDataObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActivityBodyRule());
					}
					add(
						$current,
						"dataObjects",
						lv_dataObjects_7_0,
						"br.consiste.SysADL.DataObject");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getActivityBodyAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleProtocolBody
entryRuleProtocolBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProtocolBodyRule()); }
	iv_ruleProtocolBody=ruleProtocolBody
	{ $current=$iv_ruleProtocolBody.current; }
	EOF;

// Rule ProtocolBody
ruleProtocolBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getProtocolBodyAccess().getProtocolBodyAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getProtocolBodyAccess().getRecControlProtocolControlEnumRuleCall_1_0());
				}
				lv_recControl_1_0=ruleProtocolControl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolBodyRule());
					}
					set(
						$current,
						"recControl",
						lv_recControl_1_0,
						"br.consiste.SysADL.ProtocolControl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getProtocolBodyAccess().getBodyProtocolBodyInternalParserRuleCall_2_0());
				}
				lv_body_2_0=ruleProtocolBodyInternal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolBodyRule());
					}
					set(
						$current,
						"body",
						lv_body_2_0,
						"br.consiste.SysADL.ProtocolBodyInternal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getProtocolBodyAccess().getRecTypeProtocolAlternativeTypeEnumRuleCall_3_0_0());
					}
					lv_recType_3_0=ruleProtocolAlternativeType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProtocolBodyRule());
						}
						set(
							$current,
							"recType",
							lv_recType_3_0,
							"br.consiste.SysADL.ProtocolAlternativeType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getProtocolBodyAccess().getRecursiveProtocolBodyParserRuleCall_3_1_0());
					}
					lv_recursive_4_0=ruleProtocolBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProtocolBodyRule());
						}
						set(
							$current,
							"recursive",
							lv_recursive_4_0,
							"br.consiste.SysADL.ProtocolBody");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleProtocolBodyInternal
entryRuleProtocolBodyInternal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProtocolBodyInternalRule()); }
	iv_ruleProtocolBodyInternal=ruleProtocolBodyInternal
	{ $current=$iv_ruleProtocolBodyInternal.current; }
	EOF;

// Rule ProtocolBodyInternal
ruleProtocolBodyInternal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getProtocolBodyInternalAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getProtocolBodyInternalAccess().getProtocolBodyParserRuleCall_0_1());
			}
			this_ProtocolBody_1=ruleProtocolBody
			{
				$current = $this_ProtocolBody_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getProtocolBodyInternalAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getProtocolBodyInternalAccess().getActionSendParserRuleCall_1());
		}
		this_ActionSend_3=ruleActionSend
		{
			$current = $this_ActionSend_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProtocolBodyInternalAccess().getActionReceiveParserRuleCall_2());
		}
		this_ActionReceive_4=ruleActionReceive
		{
			$current = $this_ActionReceive_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleActionSend
entryRuleActionSend returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionSendRule()); }
	iv_ruleActionSend=ruleActionSend
	{ $current=$iv_ruleActionSend.current; }
	EOF;

// Rule ActionSend
ruleActionSend returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='send'
		{
			newLeafNode(otherlv_0, grammarAccess.getActionSendAccess().getSendKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActionSendAccess().getExprExpressionParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionSendRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"br.consiste.SysADL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='via'
		{
			newLeafNode(otherlv_2, grammarAccess.getActionSendAccess().getViaKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionSendRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getActionSendAccess().getFlowToPinCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleActionReceive
entryRuleActionReceive returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionReceiveRule()); }
	iv_ruleActionReceive=ruleActionReceive
	{ $current=$iv_ruleActionReceive.current; }
	EOF;

// Rule ActionReceive
ruleActionReceive returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='receive'
		{
			newLeafNode(otherlv_0, grammarAccess.getActionReceiveAccess().getReceiveKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActionReceiveAccess().getVarTypeUseParserRuleCall_1_0());
				}
				lv_var_1_0=ruleTypeUse
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionReceiveRule());
					}
					set(
						$current,
						"var",
						lv_var_1_0,
						"br.consiste.SysADL.TypeUse");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getActionReceiveAccess().getFromKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionReceiveRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getActionReceiveAccess().getFlowToPinCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleActivityFlow
entryRuleActivityFlow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActivityFlowRule()); }
	iv_ruleActivityFlow=ruleActivityFlow
	{ $current=$iv_ruleActivityFlow.current; }
	EOF;

// Rule ActivityFlow
ruleActivityFlow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='flow'
		{
			newLeafNode(otherlv_0, grammarAccess.getActivityFlowAccess().getFlowKeyword_0());
		}
		otherlv_1='from'
		{
			newLeafNode(otherlv_1, grammarAccess.getActivityFlowAccess().getFromKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActivityFlowRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getActivityFlowAccess().getSourceActivityFlowableCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='to'
		{
			newLeafNode(otherlv_3, grammarAccess.getActivityFlowAccess().getToKeyword_3());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActivityFlowRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getActivityFlowAccess().getTargetActivityFlowableCrossReference_4_0_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityFlowAccess().getTargetSwitchActivitySwitchParserRuleCall_4_1_0());
					}
					lv_targetSwitch_5_0=ruleActivitySwitch
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityFlowRule());
						}
						set(
							$current,
							"targetSwitch",
							lv_targetSwitch_5_0,
							"br.consiste.SysADL.ActivitySwitch");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAllocationTable
entryRuleAllocationTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAllocationTableRule()); }
	iv_ruleAllocationTable=ruleAllocationTable
	{ $current=$iv_ruleAllocationTable.current; }
	EOF;

// Rule AllocationTable
ruleAllocationTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAllocationTableAccess().getAllocationTableAction_0(),
					$current);
			}
		)
		otherlv_1='allocations'
		{
			newLeafNode(otherlv_1, grammarAccess.getAllocationTableAccess().getAllocationsKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAllocationTableAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAllocationTableAccess().getAllocsAllocationParserRuleCall_3_0());
				}
				lv_allocs_3_0=ruleAllocation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAllocationTableRule());
					}
					add(
						$current,
						"allocs",
						lv_allocs_3_0,
						"br.consiste.SysADL.Allocation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getAllocationTableAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleAllocation
entryRuleAllocation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAllocationRule()); }
	iv_ruleAllocation=ruleAllocation
	{ $current=$iv_ruleAllocation.current; }
	EOF;

// Rule Allocation
ruleAllocation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAllocationAccess().getExecutableAllocationParserRuleCall_0());
		}
		this_ExecutableAllocation_0=ruleExecutableAllocation
		{
			$current = $this_ExecutableAllocation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAllocationAccess().getActivityAllocationParserRuleCall_1());
		}
		this_ActivityAllocation_1=ruleActivityAllocation
		{
			$current = $this_ActivityAllocation_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExecutableAllocation
entryRuleExecutableAllocation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExecutableAllocationRule()); }
	iv_ruleExecutableAllocation=ruleExecutableAllocation
	{ $current=$iv_ruleExecutableAllocation.current; }
	EOF;

// Rule ExecutableAllocation
ruleExecutableAllocation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getExecutableAllocationAccess().getExecutableAllocationAction_0(),
					$current);
			}
		)
		otherlv_1='executable'
		{
			newLeafNode(otherlv_1, grammarAccess.getExecutableAllocationAccess().getExecutableKeyword_1());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExecutableAllocationRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getExecutableAllocationAccess().getSourceExecutableCrossReference_2_0_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_3='null'
			{
				newLeafNode(otherlv_3, grammarAccess.getExecutableAllocationAccess().getNullKeyword_2_1());
			}
		)
		otherlv_4='to'
		{
			newLeafNode(otherlv_4, grammarAccess.getExecutableAllocationAccess().getToKeyword_3());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExecutableAllocationRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getExecutableAllocationAccess().getTargetActionDefCrossReference_4_0_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_6='null'
			{
				newLeafNode(otherlv_6, grammarAccess.getExecutableAllocationAccess().getNullKeyword_4_1());
			}
		)
	)
;

// Entry rule entryRuleActivityAllocation
entryRuleActivityAllocation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActivityAllocationRule()); }
	iv_ruleActivityAllocation=ruleActivityAllocation
	{ $current=$iv_ruleActivityAllocation.current; }
	EOF;

// Rule ActivityAllocation
ruleActivityAllocation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getActivityAllocationAccess().getActivityAllocationAction_0(),
					$current);
			}
		)
		otherlv_1='activity'
		{
			newLeafNode(otherlv_1, grammarAccess.getActivityAllocationAccess().getActivityKeyword_1());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActivityAllocationRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getActivityAllocationAccess().getSourceActivityDefCrossReference_2_0_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_3='null'
			{
				newLeafNode(otherlv_3, grammarAccess.getActivityAllocationAccess().getNullKeyword_2_1());
			}
		)
		otherlv_4='to'
		{
			newLeafNode(otherlv_4, grammarAccess.getActivityAllocationAccess().getToKeyword_3());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActivityAllocationRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getActivityAllocationAccess().getTargetStructuralDefCrossReference_4_0_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_6='null'
			{
				newLeafNode(otherlv_6, grammarAccess.getActivityAllocationAccess().getNullKeyword_4_1());
			}
		)
	)
;

// Entry rule entryRuleEFloat
entryRuleEFloat returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEFloatRule()); }
	iv_ruleEFloat=ruleEFloat
	{ $current=$iv_ruleEFloat.current.getText(); }
	EOF;

// Rule EFloat
ruleEFloat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEFloatAccess().getHyphenMinusKeyword_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1());
			}
		)?
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEFloatAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_3());
		}
		(
			(
				kw='E'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEFloatAccess().getEKeyword_4_0_0());
				}
				    |
				kw='e'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEFloatAccess().getEKeyword_4_0_1());
				}
			)
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEFloatAccess().getHyphenMinusKeyword_4_1());
				}
			)?
			this_INT_7=RULE_INT
			{
				$current.merge(this_INT_7);
			}
			{
				newLeafNode(this_INT_7, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_4_2());
			}
		)?
	)
;

// Rule FlowProperty
ruleFlowProperty returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='in'
			{
				$current = grammarAccess.getFlowPropertyAccess().getInEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getFlowPropertyAccess().getInEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='out'
			{
				$current = grammarAccess.getFlowPropertyAccess().getOutEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getFlowPropertyAccess().getOutEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ConstraintKind
ruleConstraintKind returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='pre-condition'
			{
				$current = grammarAccess.getConstraintKindAccess().getPreConditionEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getConstraintKindAccess().getPreConditionEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='post-condition'
			{
				$current = grammarAccess.getConstraintKindAccess().getPostConditionEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getConstraintKindAccess().getPostConditionEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='invariant'
			{
				$current = grammarAccess.getConstraintKindAccess().getInvariantEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getConstraintKindAccess().getInvariantEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule ProtocolAlternativeType
ruleProtocolAlternativeType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=';'
			{
				$current = grammarAccess.getProtocolAlternativeTypeAccess().getComplimentaryEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getProtocolAlternativeTypeAccess().getComplimentaryEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='|'
			{
				$current = grammarAccess.getProtocolAlternativeTypeAccess().getAlternativeEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getProtocolAlternativeTypeAccess().getAlternativeEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ProtocolControl
ruleProtocolControl returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='always'
			{
				$current = grammarAccess.getProtocolControlAccess().getAlwaysEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getProtocolControlAccess().getAlwaysEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='several'
			{
				$current = grammarAccess.getProtocolControlAccess().getSeveralEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getProtocolControlAccess().getSeveralEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='once'
			{
				$current = grammarAccess.getProtocolControlAccess().getOnceEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getProtocolControlAccess().getOnceEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='perhaps'
			{
				$current = grammarAccess.getProtocolControlAccess().getPerhapsEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getProtocolControlAccess().getPerhapsEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
